/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GraphicUserInterface;

import BusinessLogicLayer.GiaoVienBUS;
import BusinessLogicLayer.LopBUS;
import BusinessLogicLayer.MonHocBUS;
import BusinessLogicLayer.NamHocBUS;
import BusinessLogicLayer.PhongBUS;
import DataTransferObject.GiaoVienDTO;
import DataTransferObject.LopDTO;
import DataTransferObject.NamHocDTO;
import DataTransferObject.PhongDTO;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author mr932
 */
public class QuanLyLopGUI extends javax.swing.JInternalFrame {
    private static final int MA_LENGTH = 5;
    private static final int TENLOP_LENGTH = 45;
    private static final int MAPHONG_LENGTH = 4;
    private static final int TENPHONG_LENGTH = 45;
    private static final String HOC_KY_HIEN_TAI = "2";

    /**
     * Creates new form QuanLyLopGUI
     */
    GiaoVienBUS gvBus;
    MonHocBUS mhBus;
    PhongBUS pBus;
    LopBUS lopBus;
    NamHocBUS nhBus;
    public QuanLyLopGUI() throws Exception {
        initComponents();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        
        
        gvBus = new GiaoVienBUS();
        mhBus= new MonHocBUS();
        pBus = new PhongBUS();
        lopBus= new LopBUS();
        nhBus = new NamHocBUS();
        
        mhBus.docDSMH();
        gvBus.docDSGV(mhBus.getDsmh());
        pBus.getDsphong();
        lopBus.getDslop();
        
        
        TienIch.duaGiaTriVaoCbx(cbxGVCN, gvBus.toStringList(gvBus.getDsgv()));
        TienIch.duaGiaTriVaoCbx(cbxPhong,pBus.toStringList(pBus.getDsphong()));
        TienIch.duaGiaTriVaoCbx(cbxNamHoc, nhBus.toStringList(nhBus.getDsnh()));
        btnDocDs.requestFocus();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        functionPanel = new javax.swing.JPanel();
        scrollPaneDanhSachLop = new javax.swing.JScrollPane();
        tbDanhSachLop = new javax.swing.JTable();
        panelInput = new javax.swing.JPanel();
        lbLop = new javax.swing.JLabel();
        lbNamHoc = new javax.swing.JLabel();
        txtMaLop = new javax.swing.JTextField();
        txtTenLop = new javax.swing.JTextField();
        lbLop1 = new javax.swing.JLabel();
        cbxGVCN = new javax.swing.JComboBox<>();
        lbNamHoc1 = new javax.swing.JLabel();
        cbxPhong = new javax.swing.JComboBox<>();
        lbLop2 = new javax.swing.JLabel();
        btnChonGiaoVien = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnNhapLai = new javax.swing.JButton();
        btnDocDs = new javax.swing.JButton();
        cbxNamHoc = new javax.swing.JComboBox<>();
        scrollPaneTbDsPhong = new javax.swing.JScrollPane();
        tbPhong = new javax.swing.JTable();
        panelInputDiem = new javax.swing.JPanel();
        lbDiem1Tiet = new javax.swing.JLabel();
        txTenPhong2 = new javax.swing.JTextField();
        lbDiem15Phut = new javax.swing.JLabel();
        txMaPhong2 = new javax.swing.JTextField();
        btnThemPhong = new javax.swing.JButton();
        btnXoaPhong = new javax.swing.JButton();
        btnSuaPhong = new javax.swing.JButton();
        btnDocDsPhong = new javax.swing.JButton();
        btnTimKiemPhong = new javax.swing.JButton();
        btnNhapLaiPhong = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        lbSoKetQuaLop = new javax.swing.JLabel();
        lbSoKetQuaPhong = new javax.swing.JLabel();

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        jLabel5.setFont(new java.awt.Font("Helvetica", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(23, 35, 51));
        jLabel5.setText("Quản Lý Lớp Học");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
        );

        scrollPaneDanhSachLop.setToolTipText("");
        scrollPaneDanhSachLop.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N

        tbDanhSachLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        tbDanhSachLop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã lớp", "Tên lớp", "Phòng", "Mã GV", "Họ và tên", "Năm học", "Sỉ số"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDanhSachLop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDanhSachLoptbDSDSmouseClick(evt);
            }
        });
        scrollPaneDanhSachLop.setViewportView(tbDanhSachLop);

        panelInput.setBackground(new java.awt.Color(255, 255, 255));
        panelInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        panelInput.setForeground(new java.awt.Color(102, 102, 102));

        lbLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbLop.setForeground(new java.awt.Color(23, 35, 51));
        lbLop.setText("Mã lớp");

        lbNamHoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbNamHoc.setForeground(new java.awt.Color(23, 35, 51));
        lbNamHoc.setText("Chọn Phòng");

        txtMaLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        txtMaLop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtMaLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaLopActionPerformed(evt);
            }
        });

        txtTenLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        txtTenLop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        lbLop1.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbLop1.setForeground(new java.awt.Color(23, 35, 51));
        lbLop1.setText("Tên lớp");

        cbxGVCN.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxGVCN.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbNamHoc1.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbNamHoc1.setForeground(new java.awt.Color(23, 35, 51));
        lbNamHoc1.setText("Chọn GVCN");

        cbxPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbLop2.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbLop2.setForeground(new java.awt.Color(23, 35, 51));
        lbLop2.setText("Năm học");

        btnChonGiaoVien.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnChonGiaoVien.setText("...");
        btnChonGiaoVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonGiaoVienActionPerformed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(23, 35, 51));
        btnTimKiem.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        btnTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnTimKiemKeyPressed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(23, 35, 51));
        btnXoa.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        btnXoa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnXoaKeyPressed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(23, 35, 51));
        btnSua.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        btnSua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSuaKeyPressed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(23, 35, 51));
        btnThem.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        btnThem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnThemKeyPressed(evt);
            }
        });

        btnNhapLai.setBackground(new java.awt.Color(23, 35, 51));
        btnNhapLai.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnNhapLai.setForeground(new java.awt.Color(255, 255, 255));
        btnNhapLai.setText("Nhập lại");
        btnNhapLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiActionPerformed(evt);
            }
        });
        btnNhapLai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnNhapLaiKeyPressed(evt);
            }
        });

        btnDocDs.setBackground(new java.awt.Color(120, 168, 252));
        btnDocDs.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnDocDs.setForeground(new java.awt.Color(255, 255, 255));
        btnDocDs.setText("Đọc DS");
        btnDocDs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocDsActionPerformed(evt);
            }
        });
        btnDocDs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnDocDsKeyPressed(evt);
            }
        });

        cbxNamHoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxNamHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panelInputLayout = new javax.swing.GroupLayout(panelInput);
        panelInput.setLayout(panelInputLayout);
        panelInputLayout.setHorizontalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaLop)
                            .addComponent(lbLop))
                        .addGap(18, 18, 18)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbLop1)
                            .addComponent(txtTenLop))
                        .addGap(45, 45, 45)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbLop2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNamHoc)
                            .addComponent(cbxPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNamHoc1)
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addComponent(cbxGVCN, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChonGiaoVien, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(57, 57, 57))
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addComponent(btnDocDs, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                        .addGap(33, 33, 33)
                        .addComponent(btnNhapLai, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                        .addGap(34, 34, 34)
                        .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .addGap(36, 36, 36)
                        .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .addGap(38, 38, 38)
                        .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addGap(71, 71, 71))))
        );
        panelInputLayout.setVerticalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInputLayout.createSequentialGroup()
                            .addComponent(lbNamHoc1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbxGVCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnChonGiaoVien)))
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panelInputLayout.createSequentialGroup()
                                    .addGap(16, 16, 16)
                                    .addComponent(cbxNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInputLayout.createSequentialGroup()
                                    .addComponent(lbLop2)
                                    .addGap(30, 30, 30)))
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addComponent(lbNamHoc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panelInputLayout.createSequentialGroup()
                            .addComponent(lbLop1)
                            .addGap(3, 3, 3)
                            .addComponent(txtTenLop, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelInputLayout.createSequentialGroup()
                            .addComponent(lbLop)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMaLop, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimKiem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnThem)
                    .addComponent(btnNhapLai)
                    .addComponent(btnDocDs))
                .addGap(35, 35, 35))
        );

        scrollPaneTbDsPhong.setToolTipText("");
        scrollPaneTbDsPhong.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N

        tbPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        tbPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phòng", "Tên phòng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPhongtbDSDSmouseClick(evt);
            }
        });
        scrollPaneTbDsPhong.setViewportView(tbPhong);

        panelInputDiem.setBackground(new java.awt.Color(255, 255, 255));
        panelInputDiem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        lbDiem1Tiet.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbDiem1Tiet.setForeground(new java.awt.Color(23, 35, 51));
        lbDiem1Tiet.setText("Tên phòng");

        txTenPhong2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTenPhong2ActionPerformed(evt);
            }
        });

        lbDiem15Phut.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbDiem15Phut.setForeground(new java.awt.Color(23, 35, 51));
        lbDiem15Phut.setText("Mã phòng");

        btnThemPhong.setBackground(new java.awt.Color(23, 35, 51));
        btnThemPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnThemPhong.setForeground(new java.awt.Color(255, 255, 255));
        btnThemPhong.setText("Thêm");
        btnThemPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPhongActionPerformed(evt);
            }
        });

        btnXoaPhong.setBackground(new java.awt.Color(23, 35, 51));
        btnXoaPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnXoaPhong.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaPhong.setText("Xóa");
        btnXoaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaPhongActionPerformed(evt);
            }
        });

        btnSuaPhong.setBackground(new java.awt.Color(23, 35, 51));
        btnSuaPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnSuaPhong.setForeground(new java.awt.Color(255, 255, 255));
        btnSuaPhong.setText("Sửa");
        btnSuaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaPhongActionPerformed(evt);
            }
        });

        btnDocDsPhong.setBackground(new java.awt.Color(120, 168, 252));
        btnDocDsPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnDocDsPhong.setForeground(new java.awt.Color(255, 255, 255));
        btnDocDsPhong.setText("Đọc DS");
        btnDocDsPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocDsPhongActionPerformed(evt);
            }
        });

        btnTimKiemPhong.setBackground(new java.awt.Color(23, 35, 51));
        btnTimKiemPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnTimKiemPhong.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiemPhong.setText("Tìm");
        btnTimKiemPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemPhongActionPerformed(evt);
            }
        });

        btnNhapLaiPhong.setBackground(new java.awt.Color(23, 35, 51));
        btnNhapLaiPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnNhapLaiPhong.setForeground(new java.awt.Color(255, 255, 255));
        btnNhapLaiPhong.setText("Nhập lại");
        btnNhapLaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInputDiemLayout = new javax.swing.GroupLayout(panelInputDiem);
        panelInputDiem.setLayout(panelInputDiemLayout);
        panelInputDiemLayout.setHorizontalGroup(
            panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputDiemLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelInputDiemLayout.createSequentialGroup()
                        .addComponent(btnDocDsPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSuaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelInputDiemLayout.createSequentialGroup()
                            .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbDiem15Phut)
                                .addComponent(lbDiem1Tiet))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txTenPhong2, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                .addComponent(txMaPhong2)))
                        .addGroup(panelInputDiemLayout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(btnThemPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnXoaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelInputDiemLayout.createSequentialGroup()
                        .addComponent(btnNhapLaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiemPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        panelInputDiemLayout.setVerticalGroup(
            panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputDiemLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDiem15Phut)
                    .addComponent(txMaPhong2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDiem1Tiet)
                    .addComponent(txTenPhong2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSuaPhong)
                    .addComponent(btnDocDsPhong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemPhong)
                    .addComponent(btnXoaPhong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelInputDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimKiemPhong)
                    .addComponent(btnNhapLaiPhong))
                .addGap(19, 19, 19))
        );

        btnReport.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnReport.setText("Report");

        btnExport.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnExport.setText("Export");

        btnImport.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnImport.setText("Import");

        lbSoKetQuaLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbSoKetQuaLop.setText("Số kết quả tìm thấy");

        lbSoKetQuaPhong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbSoKetQuaPhong.setText("Số kết quả tìm thấy");

        javax.swing.GroupLayout functionPanelLayout = new javax.swing.GroupLayout(functionPanel);
        functionPanel.setLayout(functionPanelLayout);
        functionPanelLayout.setHorizontalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(functionPanelLayout.createSequentialGroup()
                        .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(functionPanelLayout.createSequentialGroup()
                                .addComponent(scrollPaneDanhSachLop, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(functionPanelLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(lbSoKetQuaLop)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImport)
                                .addGap(18, 18, 18)
                                .addComponent(btnExport)
                                .addGap(18, 18, 18)
                                .addComponent(btnReport)
                                .addGap(36, 36, 36)))
                        .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrollPaneTbDsPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(panelInputDiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbSoKetQuaPhong)
                .addGap(173, 173, 173))
        );
        functionPanelLayout.setVerticalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(panelInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(lbSoKetQuaPhong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(functionPanelLayout.createSequentialGroup()
                        .addComponent(scrollPaneTbDsPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelInputDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addComponent(scrollPaneDanhSachLop, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReport)
                    .addComponent(btnExport)
                    .addComponent(btnImport)
                    .addComponent(lbSoKetQuaLop))
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbDanhSachLoptbDSDSmouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDanhSachLoptbDSDSmouseClick
        // TODO add your handling code here:
        chonLop();
    }//GEN-LAST:event_tbDanhSachLoptbDSDSmouseClick

    private void tbPhongtbDSDSmouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhongtbDSDSmouseClick
        // TODO add your handling code here:
        chonPhong();
    }//GEN-LAST:event_tbPhongtbDSDSmouseClick

    private void txTenPhong2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTenPhong2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTenPhong2ActionPerformed

    private void txtMaLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaLopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaLopActionPerformed

    private void btnDocDsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnDocDsKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            doc();
        
    }//GEN-LAST:event_btnDocDsKeyPressed

    private void btnNhapLaiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnNhapLaiKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            nhapLai();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
            them();  
    }//GEN-LAST:event_btnNhapLaiKeyPressed

    private void btnThemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnThemKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            them();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            nhapLai();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
            sua();  
    }//GEN-LAST:event_btnThemKeyPressed

    private void btnSuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSuaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            sua();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            them();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
            xoa();  
    }//GEN-LAST:event_btnSuaKeyPressed

    private void btnXoaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnXoaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            xoa();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            sua();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
            timKiem(); 
    }//GEN-LAST:event_btnXoaKeyPressed

    private void btnTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnTimKiemKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            timKiem();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            xoa();
    }//GEN-LAST:event_btnTimKiemKeyPressed

    private void btnDocDsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocDsActionPerformed
        // TODO add your handling code here:
        doc();
    }//GEN-LAST:event_btnDocDsActionPerformed

    private void btnNhapLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiActionPerformed
        // TODO add your handling code here:
        nhapLai();
    }//GEN-LAST:event_btnNhapLaiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        them();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        sua();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoa();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnDocDsPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocDsPhongActionPerformed
        // TODO add your handling code here:
        docPhong();
        
    }//GEN-LAST:event_btnDocDsPhongActionPerformed

    private void btnSuaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaPhongActionPerformed
        suaPhong();
    }//GEN-LAST:event_btnSuaPhongActionPerformed

    private void btnThemPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPhongActionPerformed
        themPhong();
    }//GEN-LAST:event_btnThemPhongActionPerformed

    private void btnXoaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaPhongActionPerformed
        // TODO add your handling code here:
        xoaPhong();
    }//GEN-LAST:event_btnXoaPhongActionPerformed

    private void btnNhapLaiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiPhongActionPerformed
        // TODO add your handling code here:
        nhapLaiPhong();
    }//GEN-LAST:event_btnNhapLaiPhongActionPerformed

    private void btnTimKiemPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemPhongActionPerformed
        // TODO add your handling code here:
        timKiemPhong();
    }//GEN-LAST:event_btnTimKiemPhongActionPerformed

    private void btnChonGiaoVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonGiaoVienActionPerformed
        // TODO add your handling code here:
        SubFrameChonGV subFrameGv = new SubFrameChonGV(cbxGVCN);
        subFrameGv.setSize(767, 462);
        subFrameGv.setVisible(true);
    }//GEN-LAST:event_btnChonGiaoVienActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonGiaoVien;
    private javax.swing.JButton btnDocDs;
    private javax.swing.JButton btnDocDsPhong;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnNhapLai;
    private javax.swing.JButton btnNhapLaiPhong;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaPhong;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemPhong;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTimKiemPhong;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaPhong;
    private javax.swing.JComboBox<String> cbxGVCN;
    private javax.swing.JComboBox<String> cbxNamHoc;
    private javax.swing.JComboBox<String> cbxPhong;
    private javax.swing.JPanel functionPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lbDiem15Phut;
    private javax.swing.JLabel lbDiem1Tiet;
    private javax.swing.JLabel lbLop;
    private javax.swing.JLabel lbLop1;
    private javax.swing.JLabel lbLop2;
    private javax.swing.JLabel lbNamHoc;
    private javax.swing.JLabel lbNamHoc1;
    private javax.swing.JLabel lbSoKetQuaLop;
    private javax.swing.JLabel lbSoKetQuaPhong;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelInput;
    private javax.swing.JPanel panelInputDiem;
    private javax.swing.JScrollPane scrollPaneDanhSachLop;
    private javax.swing.JScrollPane scrollPaneTbDsPhong;
    private javax.swing.JTable tbDanhSachLop;
    private javax.swing.JTable tbPhong;
    private javax.swing.JTextField txMaPhong2;
    private javax.swing.JTextField txTenPhong2;
    private javax.swing.JTextField txtMaLop;
    private javax.swing.JTextField txtTenLop;
    // End of variables declaration//GEN-END:variables
    
    private void moCuaSoChonGiaoVien(){
        
    }
    
    private void doc() {
        lopBus.tinhSiSoToanDsLop(HOC_KY_HIEN_TAI);
        showTable(lopBus.getDslop());
    }

    private void nhapLai() {
        resetAllField();
    }

    private void them() {
        Boolean dauVao = kiemTraDauVao();
        Boolean trungMa = lopBus.kiemTraTrungMa(chuanHoa(txtMaLop.getText().toUpperCase()));
        
        if (trungMa)
            JOptionPane.showMessageDialog(null, "Mã lớp bị trùng. Hãy đổi mã lớp khác.");
        
        if (dauVao && !trungMa) {
            LopDTO lopMoi = new LopDTO();
            lopMoi.setMalop(chuanHoa(txtMaLop.getText().toUpperCase()));
            lopMoi.setTenlop(chuanHoa(txtTenLop.getText()));
            //////////////////////////////////////////////////////lopMoi.setManh(chuanHoa(txtNamHoc.getText()));
            //gvMoi.setMonPhuTrach(cbxMonPhuTrach.setSelectedItem(mhBus.timKiemTheoMa(thongTin));
            String thongTinPhong=cbxPhong.getSelectedItem().toString();
            lopMoi.setMaphong(pBus.timKiemPhong(thongTinPhong));
            String maGVCN= cbxGVCN.getSelectedItem().toString();
            lopMoi.setMaGVCN(gvBus.timGiaoVienTheoMa(maGVCN));
            
           
            DefaultTableModel model = (DefaultTableModel) tbDanhSachLop.getModel();
            Vector row = new Vector();
            row.add(model.getRowCount() + 1);
            row.add(lopMoi.getMalop());
            row.add(lopMoi.getTenlop());
            row.add(lopMoi.getMaphong().getMaphong());
            row.add(lopMoi.getMaGVCN().getTen());
            row.add(lopMoi.getManh().getTennh());
            
            model.addRow(row);

            tbDanhSachLop.setModel(model);
            lbSoKetQuaLop.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
            resetAllField();
            
            
            try {
                lopBus.them(lopMoi);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyLopGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
        
    }

    private void sua() {
        int row = tbDanhSachLop.getSelectedRow();
        String maLop = (String) tbDanhSachLop.getModel().getValueAt(row, 1);
        Boolean dauVao = true;
        
        if (!maLop.equals(TienIch.chuanHoa(txtMaLop.getText()))){
            JOptionPane.showMessageDialog(null, "Không được sửa mã lớp");
            dauVao = false;
        }
        
        if (dauVao && row >= 0){
            String maPhong = (String) cbxPhong.getSelectedItem();
            String namHoc = (String) cbxNamHoc.getSelectedItem();
            String maGV = (String) cbxGVCN.getSelectedItem();
            String tenLop = TienIch.chuanHoa(txtTenLop.getText());
            
            LopDTO lop = new LopDTO();
            PhongDTO phong = pBus.timKiemPhong(maPhong); 
            GiaoVienDTO gv= gvBus.timGiaoVienTheoMa(maGV);
            NamHocDTO nh = nhBus.timKiemNamHoc(namHoc);
            lop.setTenlop(tenLop);
            lop.setMaphong(phong);
            lop.setMaGVCN(gv);
            lop.setNamHoc(nh);
            lop.setMalop(maLop);
            lopBus.sua(lop);
            tbDanhSachLop.getModel().setValueAt(phong.getTenphong(), row, 3);
        }
        
    }

    private void xoa() {
        int row = tbDanhSachLop.getSelectedRow();
        if (row >= 0) {
            // Cap nhat cac o text field
            String maLopCanXoa = tbDanhSachLop.getModel().getValueAt(row, 1).toString();
            LopDTO lopCanXoa = lopBus.timKiemMa(maLopCanXoa);
            DefaultTableModel model = (DefaultTableModel) tbDanhSachLop.getModel();
            model.removeRow(row);
            tbDanhSachLop.setModel(model);
            try {   
             lopBus.xoa(lopCanXoa);
            } catch (Exception ex) {
                //Logger.getLogger(LopGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            lbSoKetQuaLop.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
        }
        resetAllField();
    }
    
    private void timKiem() {
        ArrayList<LopDTO> danhSachLopTimThay= lopBus.getDslop();
        
        String maCanTim = chuanHoa(txtMaLop.getText());
        String tenLopCanTim = chuanHoa(txtTenLop.getText());
        String nhLopCanTim = (String) cbxNamHoc.getSelectedItem();
        String thongTinLop = (String) cbxPhong.getSelectedItem();
        String thongTinGVCN = (String) cbxGVCN.getSelectedItem();
        
        if (!maCanTim.equals(""))
            danhSachLopTimThay = lopBus.timKiemTheoMa(maCanTim, danhSachLopTimThay);
        
        
        if (!tenLopCanTim.equals(""))
            danhSachLopTimThay = lopBus.timKiemTheoTenLop(tenLopCanTim, danhSachLopTimThay);
        
        
        if (!nhLopCanTim.equals(""))
            danhSachLopTimThay = lopBus.timKiemTheoNamHoc(nhLopCanTim, danhSachLopTimThay);
        
        
        
        System.out.println(thongTinLop);
        if(!thongTinLop.equals(""))
            danhSachLopTimThay = lopBus.timKiemTheoPhong(thongTinLop, danhSachLopTimThay);
        
        
        System.out.println(thongTinGVCN);
        if(!thongTinGVCN.equals(""))
            danhSachLopTimThay = lopBus.timKiemTheoGVCN(thongTinGVCN, danhSachLopTimThay);
        
        showTable(danhSachLopTimThay);
    }
    
    private void resetAllField() {
        txtMaLop.setText("");
        txtTenLop.setText("");
        cbxPhong.setSelectedIndex(0);
        cbxGVCN.setSelectedIndex(0);
        cbxNamHoc.setSelectedIndex(0);
        }
    private String chuanHoa(String chuoiDauVao) {
        String chuoiBoKhoangTrang = chuoiDauVao.trim();
        String[] arr = chuoiBoKhoangTrang.split(" ");
        StringBuffer sb = new StringBuffer();

        for (int i = 0; i < arr.length; i++) {
            //System.out.println(arr[i]);
            if (arr[i].equals("")) {
                continue;
            }
            //if (!arr[i].equals("")){
            //System.out.println(arr[i]);
            sb.append(Character.toUpperCase(arr[i].charAt(0))).append(arr[i].substring(1)).append(" ");
            //}
        }
        return sb.toString().trim();
    }
    
    
    private Boolean kiemTraDauVao() {
        Boolean dauVao = true;
        String thongBao = "";
        int sttThongBao = 1;
        
        if (txtMaLop.getText().length() != MA_LENGTH) {
            dauVao = false;
            thongBao += sttThongBao + ".Mã lớp phải có 5 ký tự.\n" ;
            sttThongBao++;
        }
        
        String namHoc = (String) cbxNamHoc.getSelectedItem();
        if (namHoc.equals("")) {
            dauVao = false;
            thongBao += sttThongBao + ". Năm không được bỏ trống.\n";
            sttThongBao++;
        } 

        
        if (txtTenLop.getText().length() > TENLOP_LENGTH) {
            dauVao = false;
            thongBao += sttThongBao + ". Tên tối đa 45 ký tự.\n";
            sttThongBao++;
        } else if (chuanHoa(txtTenLop.getText()).equals("")) {
            dauVao = false;
            thongBao += sttThongBao + ". Tên không được bỏ trống.\n";
            sttThongBao++;
        }
        
        if (cbxGVCN.getSelectedIndex() == 0){
            thongBao += sttThongBao + ". Vui lòng chọn phái chọn hệ số.\n";
            sttThongBao++;
        }
        if (cbxPhong.getSelectedIndex() == 0){
            thongBao += sttThongBao + ". Vui lòng chọn phái chọn hệ số.\n";
            sttThongBao++;
        }
        if (!thongBao.equals(""))
            JOptionPane.showMessageDialog(null, thongBao);
        return dauVao;
        
    
    }
    
    
    private void showTable(ArrayList<LopDTO> danhSachLop) {
        Vector header = new Vector();
        
        header.add("STT");
        header.add("Mã Lớp");
        header.add("Tên Lớp");
        header.add("Tên Phòng");
        header.add("Mã GV");
        header.add("Họ và tên GV");
        header.add("Năm Học");
        header.add("Sỉ số");
        DefaultTableModel model = new DefaultTableModel(header, 0);
        int stt = 1;
        for (LopDTO lop: danhSachLop) {
            Vector row = new Vector();
            row.add(stt);
            row.add(lop.getMalop());
            row.add(lop.getTenlop());
            if (lop.getMaphong() != null)
                row.add(lop.getMaphong().getTenphong());
            else
                row.add("");
            row.add(lop.getMaGVCN().getMagv());
            row.add(lop.getMaGVCN().getHo() + " " + lop.getMaGVCN().getTen());
            row.add(lop.getManh().getManh());
            row.add(lop.getSiso());
            model.addRow(row);
            stt++;
        }
        tbDanhSachLop.setModel(model);
        lbSoKetQuaLop.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
    }
    
    private void chonLop() {
        int i = tbDanhSachLop.getSelectedRow();
        if (i >= 0) {
            
            txtMaLop.setText(tbDanhSachLop.getModel().getValueAt(i, 1).toString());
            txtTenLop.setText(tbDanhSachLop.getModel().getValueAt(i, 2).toString());
            
            String namHoc = tbDanhSachLop.getModel().getValueAt(i, 6).toString();
            if (namHoc != "")
                cbxNamHoc.setSelectedItem(namHoc);
            
            String thongTinPhong = tbDanhSachLop.getModel().getValueAt(i, 3).toString();
            if (thongTinPhong != "")
                cbxPhong.setSelectedItem(pBus.timKiemPhong(thongTinPhong).getMaphong());
            
            String thongTinGVCN = tbDanhSachLop.getModel().getValueAt(i, 4).toString(); 
            System.out.println(thongTinGVCN);
            cbxGVCN.setSelectedItem((String) thongTinGVCN);
            //System.out.println(mhBus.timKiemTheoTen(thongTin).getTenmh());
  
            }
        }

    private void docPhong() {
        if (pBus.getDsphong()== null) {
            try {
                pBus.doc();
            } catch (Exception ex) {
                Logger.getLogger(QuanLyLopGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        tbPhong.requestFocus();
        showTablePhong(pBus.getDsphong());
    }

    private void suaPhong() {
        int row = tbPhong.getSelectedRow();
        
        Boolean dauVao = kiemTraDauVaoPhong();
        DefaultTableModel model = (DefaultTableModel) tbPhong.getModel();
        String maPCu = (String) model.getValueAt(row, 0);
        
        if (!chuanHoa(txMaPhong2.getText()).equals(maPCu)){
            JOptionPane.showMessageDialog(null, "Không được thay đổi mã phòng");
            txMaPhong2.setText(maPCu);
            dauVao = false;
        }
        
         if (row >= 0 && dauVao) {
            // Bien trung gian chuyen du lieu xuong BUS
            PhongDTO pCanSua = new PhongDTO();
            // Chuan hoa thong tin can sua
            //String ma = chuanHoa(txMa.getText());
            String maPhong = chuanHoa(txMaPhong2.getText());
            String tenPhong = chuanHoa(txTenPhong2.getText());
            
            
            pCanSua.setMaphong(maPhong);
            pCanSua.setTenphong(tenPhong);
            
            model.setValueAt(maPCu, row, 0);
            model.setValueAt(tenPhong, row, 1);

            tbPhong.setModel(model);
            
            try {
               
                pBus.sua(pCanSua, maPhong);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyLopGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            nhapLaiPhong();
            }   
       
        else if (row < 0)
            JOptionPane.showMessageDialog(null, "Vui lòng chọn phòng cần sửa.");
            
            
        
        
        
    }

    private void themPhong() {
        Boolean dauVao = kiemTraDauVaoPhong();
        Boolean trungMa = pBus.kiemTraTrungMa(chuanHoa(txMaPhong2.getText().toUpperCase()));
        
        if (trungMa)
            JOptionPane.showMessageDialog(null, "Mã phòng bị trùng. Hãy đổi mã phòng khác.");
        
        if (dauVao && !trungMa) {
            PhongDTO pMoi = new PhongDTO();
            pMoi.setMaphong(chuanHoa(txMaPhong2.getText().toUpperCase()));
            pMoi.setTenphong(chuanHoa(txTenPhong2.getText()));
            
            DefaultTableModel model = (DefaultTableModel) tbPhong.getModel();
            Vector row = new Vector();
            row.add(pMoi.getMaphong());
            row.add(pMoi.getTenphong());
            
            model.addRow(row);

            tbPhong.setModel(model);
            lbSoKetQuaPhong.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
            nhapLaiPhong();

            try {
                pBus.them(pMoi);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyLopGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    }

    private void xoaPhong() {
        int row = tbPhong.getSelectedRow();
        if (row >= 0) {
            // Cap nhat cac o text field
            String maPhongCanXoa = tbPhong.getModel().getValueAt(row, 0).toString();
            DefaultTableModel model = (DefaultTableModel) tbPhong.getModel();
            model.removeRow(row);
            tbPhong.setModel(model);
            try {
                pBus.xoa(maPhongCanXoa);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyLopGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            lbSoKetQuaPhong.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
        }
        nhapLaiPhong();
    }

    private void nhapLaiPhong() {
        txMaPhong2.setText("");
        txTenPhong2.setText("");
    }


    private void timKiemPhong() {
       ArrayList<PhongDTO> danhSachPhongTimThay = pBus.getDsphong();
       
        String maCanTim = chuanHoa(txMaPhong2.getText());
        if (!maCanTim.equals(""))
            danhSachPhongTimThay = pBus.timKiemTheoMaPhong(maCanTim, danhSachPhongTimThay);
        
        String tenCanTim = chuanHoa(txTenPhong2.getText());
        if (!tenCanTim.equals(""))
            danhSachPhongTimThay = pBus.timKiemTheoTenPhong(tenCanTim, danhSachPhongTimThay);
        showTablePhong(danhSachPhongTimThay);
        
    }
    
    
    
    private Boolean kiemTraDauVaoPhong() {
        Boolean dauVao = true;
        String thongBao = "";
        int sttThongBao = 1;
        
        if (txMaPhong2.getText().length() != MAPHONG_LENGTH) {
            dauVao = false;
            thongBao += sttThongBao + ".Mã phòng phải có 5 ký tự.\n" ;
            sttThongBao++;
        }
        
        
        if (txTenPhong2.getText().length() > TENPHONG_LENGTH) {
            dauVao = false;
            thongBao += sttThongBao + ". Tối đa 45 ký tự.\n";
            sttThongBao++;
        } 
        else if (chuanHoa(txTenPhong2.getText()).equals("")) {
            dauVao = false;
            thongBao += sttThongBao + ".Tên phòng không được bỏ trống.\n";
            sttThongBao++;
        } 

        if (!thongBao.equals(""))
            JOptionPane.showMessageDialog(null, thongBao);
        return dauVao;
        
    
    }
    
    
    private void showTablePhong(ArrayList<PhongDTO> danhSachPhong) {
        Vector header = new Vector();
        
        header.add("Mã Phòng");
        header.add("Tên Phòng");
        DefaultTableModel model = new DefaultTableModel(header, 0);
        for (PhongDTO p: danhSachPhong) {
            Vector row = new Vector();
            row.add(p.getMaphong());
            row.add(p.getTenphong());
            model.addRow(row);
        }
        tbPhong.setModel(model);
        lbSoKetQuaPhong.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
    }
    
    
    private void chonPhong() {
        int i = tbPhong.getSelectedRow();
        if (i >= 0) {
            txMaPhong2.setText(tbPhong.getModel().getValueAt(i, 0).toString());
            txTenPhong2.setText(tbPhong.getModel().getValueAt(i, 1).toString());
            cbxPhong.setSelectedItem(tbPhong.getModel().getValueAt(i, 0).toString());
  
            }
        }

    
    
    
    
    
    
}
