/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GraphicUserInterface;

import BusinessLogicLayer.DiemBUS;
import BusinessLogicLayer.DiemHocKiBUS;
import BusinessLogicLayer.GiaoVienBUS;
import BusinessLogicLayer.HS_LopBUS;
import BusinessLogicLayer.HocSinhBUS;
import BusinessLogicLayer.LoaiDiemBUS;
import BusinessLogicLayer.LopBUS;
import BusinessLogicLayer.MonHocBUS;
import BusinessLogicLayer.NamHocBUS;
import DataTransferObject.DiemDTO;
import DataTransferObject.GiaoVienDTO;
import DataTransferObject.HS_LopDTO;
import DataTransferObject.HocSinhDTO;
import DataTransferObject.LopDTO;
import java.util.ArrayList;
import java.util.Vector;
import javafx.scene.control.ComboBox;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mr932
 */
public class QuanLyDiemSoGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form QuanLyDiemSoGUI
     */
    DiemBUS diemBus;
    GiaoVienBUS gvBus;
    LopBUS lopBus;
    MonHocBUS mhBus;
    LoaiDiemBUS ldBus;
    NamHocBUS nhBus;
    HocSinhBUS hsBus;
    HS_LopBUS hslopBus;
    DiemHocKiBUS diemHkBus;
    public QuanLyDiemSoGUI() {
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        
        initComponents();
        diemBus = new DiemBUS();
        gvBus = new GiaoVienBUS();
        lopBus = new LopBUS();
        mhBus = new MonHocBUS();
        ldBus = new LoaiDiemBUS();
        nhBus = new NamHocBUS();
        hsBus = new HocSinhBUS();
        hslopBus = new HS_LopBUS();
        diemHkBus = new DiemHocKiBUS();
        //JComboBox dsComboBox[];
        //dsComboBox = new JComboBox[]{cbxGvgd, cbxLopHoc, cbxMonHoc, cbxNamHoc};

        TienIch.duaGiaTriVaoCbx(cbxLopHoc, lopBus.toStringList(lopBus.getDslop()));
        TienIch.duaGiaTriVaoCbx(cbxMonHoc, mhBus.toStringList(mhBus.getDsmh()));
        TienIch.duaGiaTriVaoCbx(cbxNamHoc, nhBus.toStringList(nhBus.getDsnh()));
        TienIch.duaGiaTriVaoCbx(cbxLoaiDiem, ldBus.toStringList(ldBus.getDsld()));
        //diemHkBus.tinhTbMonHkToanDs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgLoaiTimKiem = new javax.swing.ButtonGroup();
        btgHk = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        functionPanel = new javax.swing.JPanel();
        scrollPaneDiemTbMonTungHocSinh = new javax.swing.JScrollPane();
        tbDiemTbMonTungHocSinh = new javax.swing.JTable();
        panelInput = new javax.swing.JPanel();
        lbLop = new javax.swing.JLabel();
        lbHocKy = new javax.swing.JLabel();
        lbNamHoc = new javax.swing.JLabel();
        cbxNamHoc = new javax.swing.JComboBox<>();
        cbxLopHoc = new javax.swing.JComboBox<>();
        radHk1 = new javax.swing.JRadioButton();
        radHk2 = new javax.swing.JRadioButton();
        lbMon = new javax.swing.JLabel();
        cbxMonHoc = new javax.swing.JComboBox<>();
        btnChonLop = new javax.swing.JButton();
        btnChonMon = new javax.swing.JButton();
        btnDocDs = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnSapXep = new javax.swing.JButton();
        btnTopDs = new javax.swing.JButton();
        btnBotDs = new javax.swing.JButton();
        btnDiemChiTiet = new javax.swing.JButton();
        txSoLuongPhanTu = new javax.swing.JTextField();
        pnTimKiemNangCao = new javax.swing.JPanel();
        lbLoaiDiem = new javax.swing.JLabel();
        cbxLoaiDiem = new javax.swing.JComboBox<>();
        lbNhoHon = new javax.swing.JLabel();
        txNhoHon = new javax.swing.JTextField();
        lbLonHon = new javax.swing.JLabel();
        txLonHon = new javax.swing.JTextField();
        radHopVoiKqTruoc = new javax.swing.JRadioButton();
        radGiaoVoiKqTruoc = new javax.swing.JRadioButton();
        radTimKiemMoi = new javax.swing.JRadioButton();
        lbSoKetQuaTimThay = new javax.swing.JLabel();

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        jLabel5.setFont(new java.awt.Font("Helvetica", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(23, 35, 51));
        jLabel5.setText("Quản Lý Điểm Toàn Trường");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
        );

        scrollPaneDiemTbMonTungHocSinh.setToolTipText("");
        scrollPaneDiemTbMonTungHocSinh.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N

        tbDiemTbMonTungHocSinh.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        tbDiemTbMonTungHocSinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã", "Họ", "Tên", "Lớp", "Môn", "GVGD", "Điểm TB Môn", "Học kỳ", "Năm học"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDiemTbMonTungHocSinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDiemTbMonTungHocSinhtbDSDSmouseClick(evt);
            }
        });
        scrollPaneDiemTbMonTungHocSinh.setViewportView(tbDiemTbMonTungHocSinh);

        panelInput.setBackground(new java.awt.Color(255, 255, 255));
        panelInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        panelInput.setForeground(new java.awt.Color(102, 102, 102));

        lbLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbLop.setForeground(new java.awt.Color(23, 35, 51));
        lbLop.setText("Lớp");

        lbHocKy.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbHocKy.setForeground(new java.awt.Color(23, 35, 51));
        lbHocKy.setText("Học kỳ");

        lbNamHoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbNamHoc.setForeground(new java.awt.Color(23, 35, 51));
        lbNamHoc.setText("Năm học");

        cbxNamHoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxNamHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbxLopHoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxLopHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btgHk.add(radHk1);
        radHk1.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        radHk1.setText("1");
        radHk1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHk1ActionPerformed(evt);
            }
        });

        btgHk.add(radHk2);
        radHk2.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        radHk2.setText("2");
        radHk2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHk2ActionPerformed(evt);
            }
        });

        lbMon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbMon.setForeground(new java.awt.Color(23, 35, 51));
        lbMon.setText("Môn");

        cbxMonHoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxMonHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnChonLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnChonLop.setText("...");
        btnChonLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonLopActionPerformed(evt);
            }
        });

        btnChonMon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnChonMon.setText("...");
        btnChonMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonMonActionPerformed(evt);
            }
        });

        btnDocDs.setBackground(new java.awt.Color(120, 168, 252));
        btnDocDs.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnDocDs.setForeground(new java.awt.Color(255, 255, 255));
        btnDocDs.setText("Đọc DS");
        btnDocDs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocDsActionPerformed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(23, 35, 51));
        btnTimKiem.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnSapXep.setBackground(new java.awt.Color(23, 35, 51));
        btnSapXep.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnSapXep.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXep.setText("Sắp xếp");
        btnSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepActionPerformed(evt);
            }
        });

        btnTopDs.setBackground(new java.awt.Color(23, 35, 51));
        btnTopDs.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnTopDs.setForeground(new java.awt.Color(255, 255, 255));
        btnTopDs.setText("Top danh sách");
        btnTopDs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopDsActionPerformed(evt);
            }
        });

        btnBotDs.setBackground(new java.awt.Color(23, 35, 51));
        btnBotDs.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnBotDs.setForeground(new java.awt.Color(255, 255, 255));
        btnBotDs.setText("Bot danh sách");
        btnBotDs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBotDsActionPerformed(evt);
            }
        });

        btnDiemChiTiet.setBackground(new java.awt.Color(23, 35, 51));
        btnDiemChiTiet.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnDiemChiTiet.setForeground(new java.awt.Color(255, 255, 255));
        btnDiemChiTiet.setText("Điểm chi tiết");
        btnDiemChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiemChiTietActionPerformed(evt);
            }
        });

        txSoLuongPhanTu.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N

        javax.swing.GroupLayout panelInputLayout = new javax.swing.GroupLayout(panelInput);
        panelInput.setLayout(panelInputLayout);
        panelInputLayout.setHorizontalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelInputLayout.createSequentialGroup()
                                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbMon)
                                            .addComponent(lbLop))
                                        .addGap(31, 31, 31)
                                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbxLopHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbxMonHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(panelInputLayout.createSequentialGroup()
                                        .addComponent(lbNamHoc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbxNamHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnChonLop, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnChonMon, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24))
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addComponent(lbHocKy)
                                .addGap(18, 18, 18)
                                .addComponent(radHk1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radHk2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDocDs, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDiemChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addComponent(btnTopDs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBotDs, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txSoLuongPhanTu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(109, Short.MAX_VALUE))))
        );
        panelInputLayout.setVerticalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLop)
                    .addComponent(cbxLopHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChonLop)
                    .addComponent(btnDocDs))
                .addGap(21, 21, 21)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMon)
                    .addComponent(cbxMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChonMon)
                    .addComponent(btnTimKiem))
                .addGap(18, 18, 18)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSapXep)
                    .addComponent(lbNamHoc)
                    .addComponent(cbxNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDiemChiTiet)
                    .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radHk1)
                        .addComponent(radHk2)
                        .addComponent(lbHocKy)))
                .addGap(27, 27, 27)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTopDs)
                    .addComponent(btnBotDs)
                    .addComponent(txSoLuongPhanTu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pnTimKiemNangCao.setBackground(new java.awt.Color(255, 255, 255));
        pnTimKiemNangCao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        lbLoaiDiem.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbLoaiDiem.setForeground(new java.awt.Color(23, 35, 51));
        lbLoaiDiem.setText("Loại điểm");

        cbxLoaiDiem.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxLoaiDiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbNhoHon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbNhoHon.setForeground(new java.awt.Color(23, 35, 51));
        lbNhoHon.setText("Nhỏ hơn hoặc bằng");

        txNhoHon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        txNhoHon.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txNhoHon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txNhoHonKeyPressed(evt);
            }
        });

        lbLonHon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbLonHon.setForeground(new java.awt.Color(23, 35, 51));
        lbLonHon.setText("Lớn hơn hoặc bằng");

        txLonHon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        txLonHon.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txLonHon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txLonHonKeyPressed(evt);
            }
        });

        btgLoaiTimKiem.add(radHopVoiKqTruoc);
        radHopVoiKqTruoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        radHopVoiKqTruoc.setText("Hợp với kết quả trước");
        radHopVoiKqTruoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHopVoiKqTruocActionPerformed(evt);
            }
        });

        btgLoaiTimKiem.add(radGiaoVoiKqTruoc);
        radGiaoVoiKqTruoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        radGiaoVoiKqTruoc.setText("Giao với kết quả trước");

        btgLoaiTimKiem.add(radTimKiemMoi);
        radTimKiemMoi.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        radTimKiemMoi.setText("Tìm kiếm mới");

        javax.swing.GroupLayout pnTimKiemNangCaoLayout = new javax.swing.GroupLayout(pnTimKiemNangCao);
        pnTimKiemNangCao.setLayout(pnTimKiemNangCaoLayout);
        pnTimKiemNangCaoLayout.setHorizontalGroup(
            pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemNangCaoLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTimKiemNangCaoLayout.createSequentialGroup()
                        .addComponent(radHopVoiKqTruoc)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnTimKiemNangCaoLayout.createSequentialGroup()
                        .addGroup(pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radGiaoVoiKqTruoc)
                            .addComponent(radTimKiemMoi))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTimKiemNangCaoLayout.createSequentialGroup()
                        .addGroup(pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbLoaiDiem)
                            .addComponent(lbNhoHon, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbLonHon, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxLoaiDiem, 0, 90, Short.MAX_VALUE)
                            .addComponent(txNhoHon)
                            .addComponent(txLonHon))
                        .addGap(46, 46, 46))))
        );
        pnTimKiemNangCaoLayout.setVerticalGroup(
            pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemNangCaoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLoaiDiem)
                    .addComponent(cbxLoaiDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNhoHon)
                    .addComponent(txNhoHon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnTimKiemNangCaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLonHon)
                    .addComponent(txLonHon, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(radHopVoiKqTruoc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radGiaoVoiKqTruoc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radTimKiemMoi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbSoKetQuaTimThay.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbSoKetQuaTimThay.setText("Số kết quả tìm thấy");

        javax.swing.GroupLayout functionPanelLayout = new javax.swing.GroupLayout(functionPanel);
        functionPanel.setLayout(functionPanelLayout);
        functionPanelLayout.setHorizontalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(functionPanelLayout.createSequentialGroup()
                        .addComponent(panelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(pnTimKiemNangCao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(scrollPaneDiemTbMonTungHocSinh, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE))
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(lbSoKetQuaTimThay)
                .addGap(79, 813, Short.MAX_VALUE))
        );
        functionPanelLayout.setVerticalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnTimKiemNangCao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62)
                .addComponent(scrollPaneDiemTbMonTungHocSinh, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbSoKetQuaTimThay)
                .addGap(61, 61, 61))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbDiemTbMonTungHocSinhtbDSDSmouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDiemTbMonTungHocSinhtbDSDSmouseClick
        // TODO add your handling code here:
    }//GEN-LAST:event_tbDiemTbMonTungHocSinhtbDSDSmouseClick

    private void radHk1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHk1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radHk1ActionPerformed

    private void radHk2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHk2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radHk2ActionPerformed

    private void btnChonMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonMonActionPerformed
        // TODO add your handling code here:
        SubFrameChonMon frameChonMon = new SubFrameChonMon(cbxMonHoc);
        frameChonMon.setSize(767, 462);
        frameChonMon.setVisible(true);
    }//GEN-LAST:event_btnChonMonActionPerformed

    private void txNhoHonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNhoHonKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txNhoHonKeyPressed

    private void txLonHonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txLonHonKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txLonHonKeyPressed

    private void btnDiemChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiemChiTietActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDiemChiTietActionPerformed

    private void btnSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepActionPerformed
        // TODO add your handling code here:
        sapXep();
    }//GEN-LAST:event_btnSapXepActionPerformed

    private void radHopVoiKqTruocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHopVoiKqTruocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radHopVoiKqTruocActionPerformed

    private void btnDocDsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocDsActionPerformed
        // TODO add your handling code here:
        doc();
    }//GEN-LAST:event_btnDocDsActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnTopDsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopDsActionPerformed
        // TODO add your handling code here:
        xuatTopDs();
    }//GEN-LAST:event_btnTopDsActionPerformed

    private void btnBotDsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBotDsActionPerformed
        // TODO add your handling code here:
        xuatBotDs();
    }//GEN-LAST:event_btnBotDsActionPerformed

    private void btnChonLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonLopActionPerformed
        // TODO add your handling code here:
        SubFrameChonLop frameChonLop = new SubFrameChonLop(cbxLopHoc);
        frameChonLop.setSize(767, 462);
        frameChonLop.setVisible(true);
    }//GEN-LAST:event_btnChonLopActionPerformed

    private void xuatBotDs() {
        if (kiemTraDauVao()) {
            if (TienIch.dsKqTruoc.size() != 0) {
                ArrayList<DiemDTO> dsBot = new ArrayList<>();
                diemBus.sapXep(TienIch.dsKqTruoc);
                int dem = 0;
                int i = TienIch.dsKqTruoc.size() - 1;
                while (dem < Integer.parseInt(txSoLuongPhanTu.getText())) {
                    dsBot.add(TienIch.dsKqTruoc.get(i--));
                    dem++;
                }
                showTable(dsBot);
            } else {
                JOptionPane.showMessageDialog(null, "Hãy thực hiện tìm kiếm trước.");
            }
        }
    }

    private void xuatTopDs() {
        if (kiemTraDauVao()) {
            if (TienIch.dsKqTruoc.size() == 0) {
                ArrayList<DiemDTO> dsTop = new ArrayList<>();
                diemBus.sapXep(TienIch.dsKqTruoc);
                int dem = 0;
                int i = 0;
                while (dem < Integer.parseInt(txSoLuongPhanTu.getText())) {
                    dsTop.add(TienIch.dsKqTruoc.get(i++));
                    dem++;
                }
                showTable(dsTop);
            } else {
                JOptionPane.showMessageDialog(null, "Hãy thực hiện tìm kiếm trước.");
            }
        }
    }

    private void sapXep() {
        showTable(diemBus.sapXep(TienIch.dsKqTruoc));
    }

    private void timKiem() {
        if (kiemTraDauVao()) {
            ArrayList<DiemDTO> danhSachKetQua = diemBus.getDsd();

            if (!cbxLopHoc.getSelectedItem().equals("")) {
                ArrayList<HS_LopDTO> dsHsTrongLop = hslopBus.timTheoLop((String) cbxLopHoc.getSelectedItem());
                ArrayList<DiemDTO> dsKqTemp = new ArrayList<>();
                for (DiemDTO diem : danhSachKetQua) {
                    if (hslopBus.timTheoHs(diem.getHocSinh().getMahs(), dsHsTrongLop).size() != 0) {
                        dsKqTemp.add(diem);
                    }
                }
                danhSachKetQua = dsKqTemp;
            }

            if (!cbxMonHoc.getSelectedItem().equals("")) {
                danhSachKetQua = diemBus.timKiemTheoMonHoc((String) cbxMonHoc.getSelectedItem(), danhSachKetQua);
            }

            if (!cbxNamHoc.getSelectedItem().equals("")) {
                danhSachKetQua = diemBus.timKiemTheoNamHoc((String) cbxNamHoc.getSelectedItem(), danhSachKetQua);
            }

            if (radHk1.isSelected() == true) {
                danhSachKetQua = diemBus.timKiemTheoHocKy(radHk1.getText(), danhSachKetQua);
            }
            if (radHk2.isSelected() == true) {
                danhSachKetQua = diemBus.timKiemTheoHocKy(radHk2.getText(), danhSachKetQua);
            }

            if (!cbxLoaiDiem.getSelectedItem().equals("")) {
                danhSachKetQua = diemBus.timKiemTheoLoaiDiem((String) cbxLoaiDiem.getSelectedItem(), danhSachKetQua);
            }

            if (!txNhoHon.getText().equals("")) {
                danhSachKetQua = diemBus.timKiemDiemNhoHon(Float.parseFloat(txNhoHon.getText()), danhSachKetQua);
            }

            if (!txLonHon.getText().equals("")) {
                danhSachKetQua = diemBus.timKiemDiemLonHon(Float.parseFloat(txLonHon.getText()), danhSachKetQua);
            }

            if (radHopVoiKqTruoc.isSelected() == true) {
                for (DiemDTO diem : TienIch.dsKqTruoc) {
                    danhSachKetQua.add(diem);
                }
            }

            if (radGiaoVoiKqTruoc.isSelected() == true) {
                for (DiemDTO diem : TienIch.dsKqTruoc) {
                    if (!danhSachKetQua.contains(diem)) {
                        danhSachKetQua.remove(diem);
                    }
                }
            }

            TienIch.dsKqTruoc = danhSachKetQua;
            showTable(danhSachKetQua);
        }
    }

    private void doc() {
        showTable(diemBus.getDsd());
    }

    private void showTable(ArrayList<DiemDTO> danhSachDiem) {
        Vector header = new Vector();
        header.add("STT");
        header.add("Mã");
        header.add("Họ");
        header.add("Tên");
        header.add("Lớp");
        header.add("Môn");
        header.add("GVGD");
        header.add("Loại Điểm");
        header.add("Điểm số");
        header.add("Học Kỳ");
        header.add("Năm Học");
        DefaultTableModel model = new DefaultTableModel(header, 0);
        int stt = 1;
        for (DiemDTO diem : danhSachDiem) {
            HS_LopDTO hslop = hslopBus.timHocSinhLop(diem.getHocSinh().getMahs(), diem.getHocKy().getMahk(), diem.getNamHoc().getManh());
            Vector row = new Vector();
            row.add(stt);
            row.add(diem.getHocSinh().getMahs());
            row.add(diem.getHocSinh().getHo());
            row.add(diem.getHocSinh().getTen());
            if (hslop != null) {
                row.add(hslop.getLop().getTenlop()); // Tìm lớp
            } else {
                row.add("Chưa tìm được");
            }
            row.add(diem.getMonHoc().getTenmh());
            row.add("Chưa tìm được"); // Tìm GVGD
            row.add(diem.getLoaiDiem().getTenLoaiDiem());
            row.add(diem.getDiemSo());
            row.add(diem.getHocKy().getMahk());
            row.add(diem.getNamHoc().getTennh());
            model.addRow(row);
            stt++;
        }
        tbDiemTbMonTungHocSinh.setModel(model);
        lbSoKetQuaTimThay.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
    }

    private Boolean kiemTraDauVao() {
        String thongBao = "";
        int sttThongBao = 1;
        Boolean dauVao = true;
        if (!TienIch.isStringFloat(txNhoHon.getText()) && !txNhoHon.getText().equals("")) {
            dauVao = false;
            thongBao += sttThongBao + ". Ô nhỏ hơn hoặc bằng phải là số thực.\n";
            sttThongBao++;
        }

        if (!TienIch.isStringFloat(txLonHon.getText()) && !txLonHon.getText().equals("")) {
            dauVao = false;
            thongBao += sttThongBao + ". Ô lớn hơn hoặc bằng phải là số thực.\n";
            sttThongBao++;
        }

        if (!TienIch.isStringInt(txSoLuongPhanTu.getText()) && !txSoLuongPhanTu.getText().equals("")) {
            dauVao = false;
            thongBao += sttThongBao + ". Ô Top Bot phải là số nguyên.\n";
            sttThongBao++;
        }

        if (!thongBao.equals("")) {
            JOptionPane.showMessageDialog(null, thongBao);
        }
        return dauVao;
    }
    //private LopDTO
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgHk;
    private javax.swing.ButtonGroup btgLoaiTimKiem;
    private javax.swing.JButton btnBotDs;
    private javax.swing.JButton btnChonLop;
    private javax.swing.JButton btnChonMon;
    private javax.swing.JButton btnDiemChiTiet;
    private javax.swing.JButton btnDocDs;
    private javax.swing.JButton btnSapXep;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTopDs;
    private javax.swing.JComboBox<String> cbxLoaiDiem;
    private javax.swing.JComboBox<String> cbxLopHoc;
    private javax.swing.JComboBox<String> cbxMonHoc;
    private javax.swing.JComboBox<String> cbxNamHoc;
    private javax.swing.JPanel functionPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lbHocKy;
    private javax.swing.JLabel lbLoaiDiem;
    private javax.swing.JLabel lbLonHon;
    private javax.swing.JLabel lbLop;
    private javax.swing.JLabel lbMon;
    private javax.swing.JLabel lbNamHoc;
    private javax.swing.JLabel lbNhoHon;
    private javax.swing.JLabel lbSoKetQuaTimThay;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelInput;
    private javax.swing.JPanel pnTimKiemNangCao;
    private javax.swing.JRadioButton radGiaoVoiKqTruoc;
    private javax.swing.JRadioButton radHk1;
    private javax.swing.JRadioButton radHk2;
    private javax.swing.JRadioButton radHopVoiKqTruoc;
    private javax.swing.JRadioButton radTimKiemMoi;
    private javax.swing.JScrollPane scrollPaneDiemTbMonTungHocSinh;
    private javax.swing.JTable tbDiemTbMonTungHocSinh;
    private javax.swing.JTextField txLonHon;
    private javax.swing.JTextField txNhoHon;
    private javax.swing.JTextField txSoLuongPhanTu;
    // End of variables declaration//GEN-END:variables
}
