/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GraphicUserInterface;

import BusinessLogicLayer.GiaoVienBUS;
import BusinessLogicLayer.HocSinhBUS;
import BusinessLogicLayer.MonHocBUS;
import DataTransferObject.GiaoVienDTO;
import DataTransferObject.HocSinhDTO;
import DataTransferObject.MonHocDTO;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mr932
 */
public class QuanLyGiaoVienGUI extends javax.swing.JInternalFrame {

    private static final int MA_LENGTH = 5;
    private static final int HO_LENGTH = 45;
    private static final int TEN_LENGTH = 45;
    private static final int MONPHUTRACH_LENGTH = 5;
    /**
     * Creates new form QuanLyGiaoVienGUI
     */
    GiaoVienBUS gvBus;
    MonHocBUS mhBus;
    public QuanLyGiaoVienGUI() throws Exception {
        
        initComponents();
        
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        
        gvBus = new GiaoVienBUS();
        mhBus= new MonHocBUS();
        mhBus.docDSMH();
        TienIch.duaGiaTriVaoCbx(cbxMonPhuTrach, mhBus.toStringList(mhBus.getDsmh()));
        btnDocDS.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        functionPanel = new javax.swing.JPanel();
        panelInput = new javax.swing.JPanel();
        txMa = new javax.swing.JTextField();
        btnXoa = new javax.swing.JButton();
        txTen = new javax.swing.JTextField();
        txHo = new javax.swing.JTextField();
        lbMa = new javax.swing.JLabel();
        lbHo = new javax.swing.JLabel();
        lbTen = new javax.swing.JLabel();
        lbMonPhuTrach = new javax.swing.JLabel();
        cbxMonPhuTrach = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnDocDS = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnNhapLai = new javax.swing.JButton();
        panelTable = new javax.swing.JPanel();
        scrollPaneDanhSachGiaoVien = new javax.swing.JScrollPane();
        tbDanhSachGiaoVien = new javax.swing.JTable();
        lbSoKetQuaTimThay = new javax.swing.JLabel();

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        headerLabel.setFont(new java.awt.Font("Helvetica", 0, 24)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(23, 35, 51));
        headerLabel.setText("Quản Lý Giáo Viên");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(headerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelInput.setBackground(new java.awt.Color(255, 255, 255));
        panelInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        panelInput.setForeground(new java.awt.Color(102, 102, 102));

        txMa.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        txMa.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(23, 35, 51));
        btnXoa.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        btnXoa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnXoaKeyPressed(evt);
            }
        });

        txTen.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        txTen.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTenActionPerformed(evt);
            }
        });

        txHo.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        txHo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txHoActionPerformed(evt);
            }
        });

        lbMa.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbMa.setForeground(new java.awt.Color(23, 35, 51));
        lbMa.setText("Mã");

        lbHo.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbHo.setForeground(new java.awt.Color(23, 35, 51));
        lbHo.setText("Họ");

        lbTen.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbTen.setForeground(new java.awt.Color(23, 35, 51));
        lbTen.setText("Tên");

        lbMonPhuTrach.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbMonPhuTrach.setForeground(new java.awt.Color(23, 35, 51));
        lbMonPhuTrach.setText("Môn phụ trách");

        cbxMonPhuTrach.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxMonPhuTrach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Toan Hoc", "Vat Ly", "Hoa Hoc", "Ngu Van", "Anh Van", "Giao Duc Cong Dan" }));
        cbxMonPhuTrach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMonPhuTrachActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(23, 35, 51));
        btnThem.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        btnThem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnThemKeyPressed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(23, 35, 51));
        btnSua.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        btnSua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSuaKeyPressed(evt);
            }
        });

        btnDocDS.setBackground(new java.awt.Color(120, 168, 252));
        btnDocDS.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnDocDS.setForeground(new java.awt.Color(255, 255, 255));
        btnDocDS.setText("Đọc DS");
        btnDocDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocDSActionPerformed(evt);
            }
        });
        btnDocDS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnDocDSKeyPressed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(23, 35, 51));
        btnTimKiem.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        btnTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnTimKiemKeyPressed(evt);
            }
        });

        btnNhapLai.setBackground(new java.awt.Color(23, 35, 51));
        btnNhapLai.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnNhapLai.setForeground(new java.awt.Color(255, 255, 255));
        btnNhapLai.setText("Nhập lại");
        btnNhapLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiActionPerformed(evt);
            }
        });
        btnNhapLai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnNhapLaiKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelInputLayout = new javax.swing.GroupLayout(panelInput);
        panelInput.setLayout(panelInputLayout);
        panelInputLayout.setHorizontalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNhapLai, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMa)
                            .addComponent(txMa))
                        .addGap(29, 29, 29)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbHo)
                            .addComponent(txHo))
                        .addGap(28, 28, 28)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTen)
                            .addComponent(txTen))
                        .addGap(33, 33, 33)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMonPhuTrach)
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addComponent(cbxMonPhuTrach, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDocDS, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(11, 11, 11))
        );
        panelInputLayout.setVerticalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMa)
                    .addComponent(lbHo)
                    .addComponent(lbTen)
                    .addComponent(lbMonPhuTrach))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txMa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txTen, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txHo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMonPhuTrach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDocDS))
                .addGap(33, 33, 33)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnNhapLai)
                    .addComponent(btnTimKiem))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        panelTable.setBackground(new java.awt.Color(255, 255, 255));
        panelTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        scrollPaneDanhSachGiaoVien.setToolTipText("");
        scrollPaneDanhSachGiaoVien.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N

        tbDanhSachGiaoVien.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        tbDanhSachGiaoVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã", "Họ", "Tên", "Môn phụ trách"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbDanhSachGiaoVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDanhSachGiaoVientbDSDSmouseClick(evt);
            }
        });
        scrollPaneDanhSachGiaoVien.setViewportView(tbDanhSachGiaoVien);

        javax.swing.GroupLayout panelTableLayout = new javax.swing.GroupLayout(panelTable);
        panelTable.setLayout(panelTableLayout);
        panelTableLayout.setHorizontalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneDanhSachGiaoVien, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        panelTableLayout.setVerticalGroup(
            panelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTableLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(scrollPaneDanhSachGiaoVien, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        lbSoKetQuaTimThay.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbSoKetQuaTimThay.setText("Số kết quả tìm thấy");

        javax.swing.GroupLayout functionPanelLayout = new javax.swing.GroupLayout(functionPanel);
        functionPanel.setLayout(functionPanelLayout);
        functionPanelLayout.setHorizontalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(102, 102, 102))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(lbSoKetQuaTimThay)
                .addGap(120, 656, Short.MAX_VALUE))
        );
        functionPanelLayout.setVerticalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(panelInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(panelTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lbSoKetQuaTimThay)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txMaActionPerformed

    private void txTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTenActionPerformed

    private void txHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txHoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txHoActionPerformed

    private void tbDanhSachGiaoVientbDSDSmouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDanhSachGiaoVientbDSDSmouseClick
        // TODO add your handling code here:
        chonGiaoVien();        
    }//GEN-LAST:event_tbDanhSachGiaoVientbDSDSmouseClick

    private void btnDocDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocDSActionPerformed
        // TODO add your handling code here:
        doc();
    }//GEN-LAST:event_btnDocDSActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnNhapLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiActionPerformed
        // TODO add your handling code here:
        nhapLai();
    }//GEN-LAST:event_btnNhapLaiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        them();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        sua();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoa();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnDocDSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnDocDSKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            doc();
    }//GEN-LAST:event_btnDocDSKeyPressed

    private void btnTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnTimKiemKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            timKiem();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
            nhapLai();        
    }//GEN-LAST:event_btnTimKiemKeyPressed

    private void btnNhapLaiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnNhapLaiKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            nhapLai();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            timKiem();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
            them();         
    }//GEN-LAST:event_btnNhapLaiKeyPressed

    private void btnThemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnThemKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            them();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            nhapLai();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
            sua();
    }//GEN-LAST:event_btnThemKeyPressed

    private void btnSuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSuaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            sua();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            them();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
            xoa();
    }//GEN-LAST:event_btnSuaKeyPressed

    private void btnXoaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnXoaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            xoa();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            sua();
    }//GEN-LAST:event_btnXoaKeyPressed

    private void cbxMonPhuTrachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMonPhuTrachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxMonPhuTrachActionPerformed
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDocDS;
    private javax.swing.JButton btnNhapLai;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbxMonPhuTrach;
    private javax.swing.JPanel functionPanel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel lbHo;
    private javax.swing.JLabel lbMa;
    private javax.swing.JLabel lbMonPhuTrach;
    private javax.swing.JLabel lbSoKetQuaTimThay;
    private javax.swing.JLabel lbTen;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelInput;
    private javax.swing.JPanel panelTable;
    private javax.swing.JScrollPane scrollPaneDanhSachGiaoVien;
    private javax.swing.JTable tbDanhSachGiaoVien;
    private javax.swing.JTextField txHo;
    private javax.swing.JTextField txMa;
    private javax.swing.JTextField txTen;
    // End of variables declaration//GEN-END:variables

    private void doc() {
        if (gvBus.getDsgv()== null) {
            try {
                mhBus.docDSMH();
                gvBus.docDSGV(mhBus.getDsmh());
            } catch (Exception ex) {
                Logger.getLogger(QuanLyGiaoVienGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        tbDanhSachGiaoVien.requestFocus();
        showTable(gvBus.getDsgv());
    }

    private void timKiem() {
        ArrayList<GiaoVienDTO> danhSachGiaoVienTimThay = gvBus.getDsgv();
        
        String maCanTim = chuanHoa(txMa.getText());
        if (!maCanTim.equals(""))
            danhSachGiaoVienTimThay = gvBus.timKiemTheoMa(maCanTim,danhSachGiaoVienTimThay);
        
        String hoCanTim = chuanHoa(txHo.getText());
        if (!hoCanTim.equals(""))
            danhSachGiaoVienTimThay = gvBus.timKiemTheoHo(hoCanTim, danhSachGiaoVienTimThay);
        
        String tenCanTim = chuanHoa(txTen.getText());
        if (!tenCanTim.equals(""))
            danhSachGiaoVienTimThay = gvBus.timKiemTheoTen(tenCanTim, danhSachGiaoVienTimThay);
        
        
        String thongTin=cbxMonPhuTrach.getSelectedItem().toString();
        //System.out.println(thongTin);
        if(!thongTin.equals(""))
        danhSachGiaoVienTimThay = gvBus.timKiemTheoMon(thongTin, danhSachGiaoVienTimThay);
        
        showTable(danhSachGiaoVienTimThay);
        
    }

    private void nhapLai() {
        resetAllField();
    }

    private void them() {
        Boolean dauVao = kiemTraDauVao();
        
        if (gvBus.timGiaoVienTheoMa(chuanHoa(txMa.getText())) != null){
            JOptionPane.showMessageDialog(null, "Mã giáo viên bị trùng. Hãy đổi mã giáo viên khác.");
            dauVao = false;
        }
        
        if (dauVao) {
            GiaoVienDTO gvMoi = new GiaoVienDTO();
            gvMoi.setMagv(chuanHoa(txMa.getText().toUpperCase()));
            gvMoi.setHo(chuanHoa(txHo.getText()));
            gvMoi.setTen(chuanHoa(txTen.getText()));
            //gvMoi.setMonPhuTrach(cbxMonPhuTrach.setSelectedItem(mhBus.timKiemTheoMa(thongTin));
            String thongTin=cbxMonPhuTrach.getSelectedItem().toString();
            gvMoi.setMonPhuTrach(mhBus.timKiemMonHoc(thongTin));
            
            
            DefaultTableModel model = (DefaultTableModel) tbDanhSachGiaoVien.getModel();
            Vector row = new Vector();
            row.add(model.getRowCount() + 1);
            row.add(gvMoi.getMagv());
            row.add(gvMoi.getHo());
            row.add(gvMoi.getTen());
            row.add(gvMoi.getMonPhuTrach().getTenmh());
            model.addRow(row);

            tbDanhSachGiaoVien.setModel(model);
            lbSoKetQuaTimThay.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
            resetAllField();
            
            
            try {
                gvBus.them(gvMoi);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyGiaoVienGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
}

    private void sua() {
        
        int row = tbDanhSachGiaoVien.getSelectedRow();
        
        Boolean dauVao = kiemTraDauVao();
        DefaultTableModel model = (DefaultTableModel) tbDanhSachGiaoVien.getModel();
        String maGvCu = (String) model.getValueAt(row, 1);
        
        if (!chuanHoa(txMa.getText()).equals(maGvCu)){
            JOptionPane.showMessageDialog(null, "Không được thay đổi mã giáo viên");
            txMa.setText(maGvCu);
            dauVao = false;
        }
        
        if (row >= 0 && dauVao) {
            // Bien trung gian chuyen du lieu xuong BUS
            GiaoVienDTO gvCanSua = new GiaoVienDTO();
            // Chuan hoa thong tin can sua
            //String ma = chuanHoa(txMa.getText());
            String ho = chuanHoa(txHo.getText());
            String ten = chuanHoa(txTen.getText());
            String thongTin = cbxMonPhuTrach.getSelectedItem().toString();
            
            
            gvCanSua.setMagv(maGvCu);
            gvCanSua.setHo(ho);
            gvCanSua.setTen(ten);
            gvCanSua.setMonPhuTrach(mhBus.timKiemMonHoc(thongTin));
            
            
            model.setValueAt(maGvCu, row, 1);
            model.setValueAt(ho, row, 2);
            model.setValueAt(ten, row, 3);
            model.setValueAt(mhBus.timKiemMonHoc(thongTin).getTenmh(), row, 4);
            tbDanhSachGiaoVien.setModel(model);
            
            try {
               
                gvBus.sua(gvCanSua);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyGiaoVienGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            resetAllField();;
            }   
       
        else if (row < 0)
            JOptionPane.showMessageDialog(null, "Vui lòng chọn giáo viên cần sửa.");
            
            
        
        
        
    }


    private void xoa() {
       int row = tbDanhSachGiaoVien.getSelectedRow();
        if (row >= 0) {
            // Cap nhat cac o text field
            String maGvCanXoa = tbDanhSachGiaoVien.getModel().getValueAt(row, 1).toString();
            DefaultTableModel model = (DefaultTableModel) tbDanhSachGiaoVien.getModel();
            model.removeRow(row);
            tbDanhSachGiaoVien.setModel(model);
            try {   
             gvBus.xoa(maGvCanXoa);
            } catch (Exception ex) {
                Logger.getLogger(QuanLyGiaoVienGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            lbSoKetQuaTimThay.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
        }
        resetAllField();
        
        
       
    }

    private void chonGiaoVien() {
        int i = tbDanhSachGiaoVien.getSelectedRow();
        if (i >= 0) {
            txMa.setText(tbDanhSachGiaoVien.getModel().getValueAt(i, 1).toString());
            txHo.setText(tbDanhSachGiaoVien.getModel().getValueAt(i, 2).toString());
            txTen.setText(tbDanhSachGiaoVien.getModel().getValueAt(i, 3).toString());
            String thongTin = tbDanhSachGiaoVien.getModel().getValueAt(i, 4).toString();     
            cbxMonPhuTrach.setSelectedItem(mhBus.timKiemMonHoc(thongTin).getMamh());
            //System.out.println(mhBus.timKiemTheoTen(thongTin).getTenmh());
  
            }
        }
    
    
    
    
    private void showTable(ArrayList<GiaoVienDTO> danhSachGiaoVien) {
        Vector header = new Vector();
        
        header.add("STT");
        header.add("Mã Giáo Viên");
        header.add("Họ Giáo Viên");
        header.add("Tên Giáo Viên");
        header.add("Môn Phụ Trách");
        DefaultTableModel model = new DefaultTableModel(header, 0);
        int stt = 1;
        for (GiaoVienDTO gv: danhSachGiaoVien) {
            Vector row = new Vector();
            row.add(stt);
            row.add(gv.getMagv());
            row.add(gv.getHo());
            row.add(gv.getTen());
            row.add(gv.getMonPhuTrach().getTenmh());
            model.addRow(row);
            stt++;
        }
        tbDanhSachGiaoVien.setModel(model);
        lbSoKetQuaTimThay.setText("Tìm thấy " + model.getRowCount() + " kết quả.");
    }
    
    private String chuanHoa(String chuoiDauVao) {
        String chuoiBoKhoangTrang = chuoiDauVao.trim();
        String[] arr = chuoiBoKhoangTrang.split(" ");
        StringBuffer sb = new StringBuffer();

        for (int i = 0; i < arr.length; i++) {
            //System.out.println(arr[i]);
            if (arr[i].equals("")) {
                continue;
            }
            //if (!arr[i].equals("")){
            //System.out.println(arr[i]);
            sb.append(Character.toUpperCase(arr[i].charAt(0))).append(arr[i].substring(1)).append(" ");
            //}
        }
        return sb.toString().trim();
    }
    
    private void resetAllField() {
        txMa.setText("");
        txTen.setText("");
        txHo.setText("");
        cbxMonPhuTrach.setSelectedIndex(0);
    }
    
    
    private Boolean kiemTraDauVao() {
        Boolean dauVao = true;
        String thongBao = "";
        int sttThongBao = 1;
        
        if (txMa.getText().length() != MA_LENGTH) {
            dauVao = false;
            thongBao += sttThongBao + ".Mã giao viên phải có 5 ký tự.\n" ;
            sttThongBao++;
        }
        
        
        if (txHo.getText().length() > HO_LENGTH) {
            dauVao = false;
            thongBao += sttThongBao + ". Tối đa 45 ký tự.\n";
            sttThongBao++;
        } 
        else if (chuanHoa(txHo.getText()).equals("")) {
            dauVao = false;
            thongBao += sttThongBao + ". Họ không được bỏ trống.\n";
            sttThongBao++;
        } 

        
        if (txTen.getText().length() > TEN_LENGTH) {
            dauVao = false;
            thongBao += sttThongBao + ". Tên tối đa 45 ký tự.\n";
            sttThongBao++;
        } else if (chuanHoa(txTen.getText()).equals("")) {
            dauVao = false;
            thongBao += sttThongBao + ". Tên không được bỏ trống.\n";
            sttThongBao++;
        }
        
        if (cbxMonPhuTrach.getSelectedIndex() == 0){
            thongBao += sttThongBao + ". Vui lòng chọn phái chọn hệ số.\n";
            sttThongBao++;
        }
        if (!thongBao.equals(""))
            JOptionPane.showMessageDialog(null, thongBao);
        return dauVao;
        
    
    }




}
