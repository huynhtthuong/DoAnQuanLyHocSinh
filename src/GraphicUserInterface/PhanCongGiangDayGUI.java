/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GraphicUserInterface;

import BusinessLogicLayer.GiaoVienBUS;
import BusinessLogicLayer.HocKyBUS;
import BusinessLogicLayer.LopBUS;
import BusinessLogicLayer.MonHocBUS;
import BusinessLogicLayer.NamHocBUS;
import BusinessLogicLayer.PhanCongGDBUS;
import static BusinessLogicLayer.PhanCongGDBUS.dspc;
import BusinessLogicLayer.PhongBUS;
import BusinessLogicLayer.TKBBUS;
import static BusinessLogicLayer.TKBBUS.dstkb;
import DataTransferObject.GiaoVienDTO;
import DataTransferObject.HocKyDTO;
import DataTransferObject.LopDTO;
import DataTransferObject.MonHocDTO;
import DataTransferObject.NamHocDTO;
import DataTransferObject.PhanCongGDDTO;
import DataTransferObject.TKBDTO;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author QuyenNguyen
 */
public class PhanCongGiangDayGUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form PhanCongGiangDayGUI
     */
    PhanCongGDBUS pcBus;
    TKBBUS tkbBus;
    HocKyBUS khBus;
    NamHocBUS nhBus;
    MonHocBUS mhBus;
    GiaoVienBUS gvBus;
    PhongBUS phongBus;
    LopBUS lopBus;
    public PhanCongGiangDayGUI() throws Exception {
        initComponents();
        nhBus = new NamHocBUS();
        nhBus.doc();
        mhBus = new MonHocBUS();
        mhBus.docDSMH();
        gvBus = new GiaoVienBUS();
        gvBus.docDSGV(mhBus.getDsmh());
        phongBus = new PhongBUS();
        phongBus.doc();
        lopBus = new LopBUS();
        lopBus.doc(nhBus.getDsnh(), gvBus.getDsgv(), phongBus.getDsphong());
        TienIch.duaGiaTriVaoCbx(cbxNamHoc, nhBus.toStringList(nhBus.getDsnh()));
        TienIch.duaGiaTriVaoCbx(cbxLop, lopBus.toStringList(lopBus.getDslop()));
        TienIch.duaGiaTriVaoCbx(cbxMon, mhBus.toStringList(mhBus.getDsmh()));
        TienIch.duaGiaTriVaoCbx(cbxGiaoVien, gvBus.toStringList(gvBus.getDsgv()));
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgHocKy = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        lbNamHoc = new javax.swing.JLabel();
        lbHocKy = new javax.swing.JLabel();
        cbxNamHoc = new javax.swing.JComboBox<>();
        radHk1 = new javax.swing.JRadioButton();
        radHk2 = new javax.swing.JRadioButton();
        functionPanel = new javax.swing.JPanel();
        panelInput = new javax.swing.JPanel();
        btnXoa = new javax.swing.JButton();
        lbGiaoVien = new javax.swing.JLabel();
        cbxGiaoVien = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnDocDS = new javax.swing.JButton();
        lbLop = new javax.swing.JLabel();
        cbxLop = new javax.swing.JComboBox<>();
        lbMon = new javax.swing.JLabel();
        cbxMon = new javax.swing.JComboBox<>();
        btnChonGiaoVien = new javax.swing.JButton();
        btnChonMon = new javax.swing.JButton();
        btnChonLop = new javax.swing.JButton();
        scrollPanePhanCong = new javax.swing.JScrollPane();
        tbPhanCong = new javax.swing.JTable();
        scrollPaneTietHoc = new javax.swing.JScrollPane();
        tbTietHoc = new javax.swing.JTable();
        panelInputTiet = new javax.swing.JPanel();
        lbTietBd = new javax.swing.JLabel();
        lbTietKt = new javax.swing.JLabel();
        lbThu = new javax.swing.JLabel();
        btnSuaTiet = new javax.swing.JButton();
        btnXoaTiet = new javax.swing.JButton();
        cbxThu = new javax.swing.JComboBox<>();
        cbxTietBd = new javax.swing.JComboBox<>();
        cbxTietKt = new javax.swing.JComboBox<>();
        btnThemTiet = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        headerLabel.setFont(new java.awt.Font("Helvetica", 0, 24)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(23, 35, 51));
        headerLabel.setText("Phân Công Giảng Dạy");

        lbNamHoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbNamHoc.setForeground(new java.awt.Color(23, 35, 51));
        lbNamHoc.setText("Năm học");

        lbHocKy.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbHocKy.setForeground(new java.awt.Color(23, 35, 51));
        lbHocKy.setText("Học kỳ");

        cbxNamHoc.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxNamHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btgHocKy.add(radHk1);
        radHk1.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        radHk1.setText("1");

        btgHocKy.add(radHk2);
        radHk2.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        radHk2.setText("2");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(headerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbHocKy, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbNamHoc, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addComponent(radHk1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radHk2))
                    .addComponent(cbxNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNamHoc)
                    .addComponent(cbxNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbHocKy)
                    .addComponent(radHk1)
                    .addComponent(radHk2))
                .addGap(15, 15, 15))
        );

        panelInput.setBackground(new java.awt.Color(255, 255, 255));
        panelInput.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        panelInput.setForeground(new java.awt.Color(102, 102, 102));

        btnXoa.setBackground(new java.awt.Color(23, 35, 51));
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        lbGiaoVien.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbGiaoVien.setForeground(new java.awt.Color(23, 35, 51));
        lbGiaoVien.setText("Chọn giáo viên");

        cbxGiaoVien.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxGiaoVien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxGiaoVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cbxGiaoVienMousePressed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(23, 35, 51));
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(23, 35, 51));
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnDocDS.setBackground(new java.awt.Color(120, 168, 252));
        btnDocDS.setForeground(new java.awt.Color(255, 255, 255));
        btnDocDS.setText("Đọc DS");
        btnDocDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocDSActionPerformed(evt);
            }
        });

        lbLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbLop.setForeground(new java.awt.Color(23, 35, 51));
        lbLop.setText("Chọn lớp");

        cbxLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxLop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbMon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbMon.setForeground(new java.awt.Color(23, 35, 51));
        lbMon.setText("Chọn môn");

        cbxMon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxMon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxMon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cbxMonMousePressed(evt);
            }
        });

        btnChonGiaoVien.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnChonGiaoVien.setText("...");
        btnChonGiaoVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonGiaoVienActionPerformed(evt);
            }
        });

        btnChonMon.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnChonMon.setText("...");
        btnChonMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonMonActionPerformed(evt);
            }
        });

        btnChonLop.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnChonLop.setText("...");
        btnChonLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonLopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInputLayout = new javax.swing.GroupLayout(panelInput);
        panelInput.setLayout(panelInputLayout);
        panelInputLayout.setHorizontalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInputLayout.createSequentialGroup()
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbLop)
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(cbxLop, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChonLop, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addComponent(cbxMon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnChonMon, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addComponent(lbMon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbGiaoVien)
                            .addComponent(cbxGiaoVien, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChonGiaoVien, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addContainerGap(155, Short.MAX_VALUE)
                        .addComponent(btnDocDS, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
        );
        panelInputLayout.setVerticalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lbMon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbxMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnChonMon)
                                .addComponent(btnChonLop))
                            .addComponent(cbxLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelInputLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInputLayout.createSequentialGroup()
                                .addComponent(lbGiaoVien)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbxGiaoVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnChonGiaoVien)))
                            .addComponent(lbLop))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDocDS)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa))
                .addGap(25, 25, 25))
        );

        scrollPanePhanCong.setToolTipText("");
        scrollPanePhanCong.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N

        tbPhanCong.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        tbPhanCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tên lớp", "Môn học", "Giáo viên", "Học kỳ", "Năm học"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPhanCong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPhanCongtbDSDSmouseClick(evt);
            }
        });
        scrollPanePhanCong.setViewportView(tbPhanCong);

        scrollPaneTietHoc.setToolTipText("");
        scrollPaneTietHoc.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N

        tbTietHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Thứ", "Tiết BĐ", "Tiết KT", "Số tiết"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTietHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTietHoctbDSDSmouseClick(evt);
            }
        });
        scrollPaneTietHoc.setViewportView(tbTietHoc);

        panelInputTiet.setBackground(new java.awt.Color(255, 255, 255));
        panelInputTiet.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        lbTietBd.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbTietBd.setForeground(new java.awt.Color(23, 35, 51));
        lbTietBd.setText("Tiết bắt đầu");

        lbTietKt.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbTietKt.setForeground(new java.awt.Color(23, 35, 51));
        lbTietKt.setText("Tiết kết thúc");

        lbThu.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lbThu.setForeground(new java.awt.Color(23, 35, 51));
        lbThu.setText("Thứ");

        btnSuaTiet.setBackground(new java.awt.Color(23, 35, 51));
        btnSuaTiet.setForeground(new java.awt.Color(255, 255, 255));
        btnSuaTiet.setText("Sửa");
        btnSuaTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaTietActionPerformed(evt);
            }
        });

        btnXoaTiet.setBackground(new java.awt.Color(120, 168, 252));
        btnXoaTiet.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaTiet.setText("Xóa");
        btnXoaTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTietActionPerformed(evt);
            }
        });

        cbxThu.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxThu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hai", "Ba", "Tư", "Năm", "Sáu" }));

        cbxTietBd.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxTietBd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        cbxTietKt.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        cbxTietKt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        btnThemTiet.setBackground(new java.awt.Color(23, 35, 51));
        btnThemTiet.setForeground(new java.awt.Color(255, 255, 255));
        btnThemTiet.setText("Thêm");
        btnThemTiet.setPreferredSize(new java.awt.Dimension(80, 29));
        btnThemTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemTietActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInputTietLayout = new javax.swing.GroupLayout(panelInputTiet);
        panelInputTiet.setLayout(panelInputTietLayout);
        panelInputTietLayout.setHorizontalGroup(
            panelInputTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputTietLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnThemTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSuaTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(btnXoaTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInputTietLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelInputTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbThu)
                    .addComponent(lbTietBd)
                    .addComponent(lbTietKt))
                .addGap(12, 12, 12)
                .addGroup(panelInputTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxThu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxTietBd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxTietKt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        panelInputTietLayout.setVerticalGroup(
            panelInputTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputTietLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelInputTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbThu)
                    .addComponent(cbxThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInputTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTietBd)
                    .addComponent(cbxTietBd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInputTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTietKt)
                    .addComponent(cbxTietKt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInputTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSuaTiet)
                    .addComponent(btnXoaTiet)
                    .addComponent(btnThemTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        btnImport.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnExport.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnReport.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        btnReport.setText("Report");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout functionPanelLayout = new javax.swing.GroupLayout(functionPanel);
        functionPanel.setLayout(functionPanelLayout);
        functionPanelLayout.setHorizontalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                        .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(functionPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnImport)
                                .addGap(18, 18, 18)
                                .addComponent(btnExport)
                                .addGap(18, 18, 18)
                                .addComponent(btnReport))
                            .addComponent(scrollPanePhanCong, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelInputTiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scrollPaneTietHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(64, 64, 64))
        );
        functionPanelLayout.setVerticalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(panelInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(functionPanelLayout.createSequentialGroup()
                        .addComponent(scrollPaneTietHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelInputTiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(functionPanelLayout.createSequentialGroup()
                        .addComponent(scrollPanePhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnReport)
                            .addComponent(btnExport)
                            .addComponent(btnImport))))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(functionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbPhanCongtbDSDSmouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhanCongtbDSDSmouseClick
        // TODO add your handling code here:
        PhanCongGDBUS pcBus = new PhanCongGDBUS();
        TKBBUS tkbBus = new TKBBUS();
        LopBUS lopBus = new LopBUS();
        HocKyBUS hkBus = new HocKyBUS();
        NamHocBUS nhBus = new NamHocBUS();
        PhongBUS phongBus = new PhongBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
        MonHocBUS mhBus = new MonHocBUS();
        
        try {
            nhBus.doc();
            phongBus.doc();
            mhBus.docDSMH();
            gvBus.docDSGV(mhBus.getDsmh());
            lopBus.doc(nhBus.getDsnh(), gvBus.getDsgv(), phongBus.getDsphong());
            pcBus.doc(hkBus.getDshk(),nhBus.getDsnh(), lopBus.getDslop(), gvBus.getDsgv(), mhBus.getDsmh());
            tkbBus.doc(hkBus.getDshk(),nhBus.getDsnh(),mhBus.getDsmh(),gvBus.getDsgv(),lopBus.getDslop());
           
        } catch (Exception ex) {
            Logger.getLogger(PhanCongGiangDayGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int row = tbPhanCong.getSelectedRow();
        if (row >= 0) {
            String layMaLop = pcBus.timLopTheoTen(tbPhanCong.getModel().getValueAt(row, 0).toString());
            String layMamh = pcBus.timMonHocTheoTen(tbPhanCong.getModel().getValueAt(row, 1).toString()); 
            String layMagv = pcBus.timGiaoVienTheoTen(tbPhanCong.getModel().getValueAt(row, 2).toString());
            String layMahk = pcBus.timHocKyTheoTen(tbPhanCong.getModel().getValueAt(row, 3).toString());
            String layManh = pcBus.timNamHocTheoTen(tbPhanCong.getModel().getValueAt(row, 4).toString());
            cbxLop.setSelectedItem(layMaLop);
            cbxMon.setSelectedItem(layMamh);
            cbxGiaoVien.setSelectedItem(layMagv); 
            cbxNamHoc.setSelectedItem(layManh);
            if(layMahk.equalsIgnoreCase("1"))
                radHk1.setSelected(true);
            if(layMahk.equalsIgnoreCase("2"))
                radHk2.setSelected(true);
            loadtkb();
        }
    }//GEN-LAST:event_tbPhanCongtbDSDSmouseClick

    public void  loadpc(){
        PhanCongGDBUS pcBus = new PhanCongGDBUS();
        HocKyBUS hkBus = new HocKyBUS();
        NamHocBUS nhBus = new NamHocBUS();
        PhongBUS phongBus = new PhongBUS();
        LopBUS lopBus = new LopBUS();
        MonHocBUS mhBus = new MonHocBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
        try {
            hkBus.doc();
            nhBus.doc();
            mhBus.docDSMH();
            gvBus.docDSGV(mhBus.getDsmh());
            phongBus.doc();
            lopBus.doc(nhBus.getDsnh(),gvBus.getDsgv(),phongBus.getDsphong());
            pcBus.doc(hkBus.getDshk(),nhBus.getDsnh(),lopBus.getDslop(),gvBus.getDsgv(),mhBus.getDsmh());
        } 
        catch (Exception ex) {
            Logger.getLogger(PhanCongGiangDayGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Vector header = new Vector();
        header.add("Mã lớp");
        header.add("Môn học");
        header.add("Giáo viên");
        header.add("Học kỳ");
        header.add("Năm học");
        DefaultTableModel model = new DefaultTableModel(header, 0);
        String choose = null;
        if(radHk1.isSelected())
        choose = "1";
        if(radHk2.isSelected())
        choose = "2";
        for (PhanCongGDDTO pc : pcBus.getDspc()) {
            Vector row = new Vector();
            row.add(pc.getLop().getTenlop());
            row.add(pc.getMonHoc().getTenmh());
            row.add(pc.getGiaoVien().getTen());
            row.add(pc.getHocKy().getTenhk());
            row.add(pc.getNamHoc().getTennh());
            model.addRow(row);
        }
        tbPhanCong.setModel(model);
    }
      
    public void loadtkb(){
        Vector header = new Vector();
        header.add("Thứ");
        header.add("Tiết BĐ");
        header.add("Tiết KT");
        header.add("Số Tiết");
        DefaultTableModel model=new DefaultTableModel(header,0);
        String choose = null;
        if(radHk1.isSelected())
        choose = "1";
        if(radHk2.isSelected())
        choose = "2";
        PhanCongGDBUS pcBus = new PhanCongGDBUS();
        TKBBUS tkbBus = new TKBBUS();
        LopBUS lopBus = new LopBUS();
        HocKyBUS hkBus = new HocKyBUS();
        NamHocBUS nhBus = new NamHocBUS();
        PhongBUS phongBus = new PhongBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
        MonHocBUS mhBus = new MonHocBUS();
        try {
            nhBus.doc();
            phongBus.doc();
            mhBus.docDSMH();
            gvBus.docDSGV(mhBus.getDsmh());
            lopBus.doc(nhBus.getDsnh(), gvBus.getDsgv(), phongBus.getDsphong());
            pcBus.doc(hkBus.getDshk(),nhBus.getDsnh(), lopBus.getDslop(), gvBus.getDsgv(), mhBus.getDsmh());
            tkbBus.doc(hkBus.getDshk(),nhBus.getDsnh(),mhBus.getDsmh(),gvBus.getDsgv(),lopBus.getDslop());
           
        } catch (Exception ex) {
            Logger.getLogger(PhanCongGiangDayGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(TKBDTO tkb : tkbBus.getDstkb())
        {
            if((tkb.getLop().getMalop().equals(cbxLop.getSelectedItem().toString())) 
                    && (tkb.getMonHoc().getMamh().equals(cbxMon.getSelectedItem().toString())) 
                    && (tkb.getGiaoVien().getMagv().equals(cbxGiaoVien.getSelectedItem().toString())) 
                    && (tkb.getHocKy().getMahk().equals(choose)) 
                    && (tkb.getNamHoc().getManh().equals(cbxNamHoc.getSelectedItem().toString()))){
            {
                Vector h=new Vector();
                h.add(tkb.getThu());
                h.add(tkb.getTietBD());
                h.add(tkb.getTietKT());
                h.add(tkb.getTietKT()-tkb.getTietBD()+1);
                model.addRow(h);
            }
        }
        tbTietHoc.setModel(model);
    }
    }
    
    private void tbTietHoctbDSDSmouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTietHoctbDSDSmouseClick
        // TODO add your handling code here:
        int row = tbTietHoc.getSelectedRow();
        if (row >= 0) {
            cbxThu.setSelectedItem(tbTietHoc.getModel().getValueAt(row, 0).toString());
            cbxTietBd.setSelectedItem(tbTietHoc.getModel().getValueAt(row,1).toString());
            cbxTietKt.setSelectedItem(tbTietHoc.getModel().getValueAt(row, 2).toString());
        }
    }//GEN-LAST:event_tbTietHoctbDSDSmouseClick

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        Workbook wordbook;
        JFileChooser jc=new JFileChooser();
        int vv=jc.showOpenDialog(headerLabel);
        if(vv==0){
            File link=jc.getSelectedFile();
            try{
                wordbook = Workbook.getWorkbook(link);
                Sheet sheet = wordbook.getSheet(0);
                int row = sheet.getRows();
                int col = sheet.getColumns();
                Vector header=new Vector();
                header.add("Mã lớp");
                header.add("Môn học");
                header.add("Học kỳ");
                header.add("Năm học");
                DefaultTableModel model=new DefaultTableModel(header,0);
            
                for(int i=1;i<row;++i){
                    Vector r=new Vector();
                    for(int j=0;j<col;++j)
                    {
                        Cell cell=sheet.getCell(j, i);
                        r.add(cell.getContents());
                    }
                    model.addRow(r);
                }
                
            tbPhanCong.setModel(model);
            wordbook.close();
            } catch (IOException ex) {
                Logger.getLogger(PhanCongGiangDayGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BiffException ex) {
                Logger.getLogger(PhanCongGiangDayGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        WritableWorkbook wordbook;
        try{
            
            wordbook = Workbook.createWorkbook(new File("pcgiangday.xls"));
            WritableSheet sheet=wordbook.createSheet("pcgiangday", 0);
            
            sheet.addCell(new Label(0,0,"Mã lớp"));
            sheet.addCell(new Label(1,0,"Môn học"));
            sheet.addCell(new Label(2,0,"Giáo viên"));
            sheet.addCell(new Label(3,0,"Học kỳ"));
            sheet.addCell(new Label(4,0,"Năm học"));
            int row=1;
            for(PhanCongGDDTO pc: PhanCongGDBUS.dspc){
                sheet.addCell(new Label(0,row,pc.getLop().getTenlop()));
                sheet.addCell(new Label(1,row,pc.getMonHoc().getTenmh()));
                sheet.addCell(new Label(2,row,pc.getGiaoVien().getTen()));
                sheet.addCell(new Label(3,row,pc.getHocKy().getTenhk()));
                sheet.addCell(new Label(4,row++,pc.getNamHoc().getTennh()));
            }
            
            wordbook.write();
            wordbook.close();
            JOptionPane.showMessageDialog(null,"Đã xuất thành công");
        } catch (IOException ex) {
            Logger.getLogger(PhanCongGiangDayGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (WriteException ex) {
            Logger.getLogger(PhanCongGiangDayGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        PhanCongGDBUS bus=new PhanCongGDBUS();
        bus.report();
        JOptionPane.showMessageDialog(null,"Đã report thành công");
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnDocDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocDSActionPerformed
        // TODO add your handling code here:
        PhanCongGDBUS pcBus = new PhanCongGDBUS();
        HocKyBUS hkBus = new HocKyBUS();
        NamHocBUS nhBus = new NamHocBUS();
        PhongBUS phongBus = new PhongBUS();
        LopBUS lopBus = new LopBUS();
        MonHocBUS mhBus = new MonHocBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
        try {
            hkBus.doc();
            nhBus.doc();
            mhBus.docDSMH();
            gvBus.docDSGV(mhBus.getDsmh());
            phongBus.doc();
            lopBus.doc(nhBus.getDsnh(),gvBus.getDsgv(),phongBus.getDsphong());
            pcBus.doc(hkBus.getDshk(),nhBus.getDsnh(),lopBus.getDslop(),gvBus.getDsgv(),mhBus.getDsmh());
        } 
        catch (Exception ex) {
            Logger.getLogger(PhanCongGiangDayGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Vector header = new Vector();
        header.add("Mã lớp");
        header.add("Môn học");
        header.add("Giáo viên");
        header.add("Học kỳ");
        header.add("Năm học");
        DefaultTableModel model = new DefaultTableModel(header, 0);
        String choose = null;
        if(radHk1.isSelected())
        choose = "1";
        if(radHk2.isSelected())
        choose = "2";
        for (PhanCongGDDTO pc : pcBus.getDspc()) {
            Vector row = new Vector();
            row.add(pc.getLop().getTenlop());
            row.add(pc.getMonHoc().getTenmh());
            row.add(pc.getGiaoVien().getTen());
            row.add(pc.getHocKy().getTenhk());
            row.add(pc.getNamHoc().getTennh());
            model.addRow(row);
        }
        tbPhanCong.setModel(model);
    }//GEN-LAST:event_btnDocDSActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String choose = null;
        if(radHk1.isSelected())
        choose = "1";
        if(radHk2.isSelected())
        choose = "2";
        NamHocBUS nhBus = new NamHocBUS();
        PhongBUS phongBus = new PhongBUS();
        LopBUS lopBus = new LopBUS();
        MonHocBUS mhBus = new MonHocBUS();
        HocKyBUS hkBus = new HocKyBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
 
        Vector header = new Vector();
        header.add("Mã lớp");
        header.add("Môn học");
        header.add("Giáo viên");
        header.add("Học kỳ");
        header.add("Năm học");
        DefaultTableModel model = new DefaultTableModel(header, 0);
        
            //kiểm tra điều kiện để thêm
            PhanCongGDBUS pcBus = new PhanCongGDBUS();
            boolean kiemTra = pcBus.kiemTraTrungMa(cbxLop.getSelectedItem().toString(), cbxMon.getSelectedItem().toString(), cbxNamHoc.getSelectedItem().toString(), choose);
            if(!kiemTra){    
                PhanCongGDDTO pcMoi = new PhanCongGDDTO();
                pcMoi.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());
                pcMoi.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
                pcMoi.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
                pcMoi.setHocKy(hkBus.getDshk(),choose);
                pcMoi.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
                pcBus.them(pcMoi);
                
                for(PhanCongGDDTO pc : pcBus.getDspc()){
                Vector row = new Vector();
                row.add(pc.getLop().getTenlop());
                row.add(pc.getMonHoc().getTenmh());
                row.add(pc.getGiaoVien().getTen());
                row.add(choose);
                row.add(pc.getNamHoc().getTennh());
                model.addRow(row);
                }
                tbPhanCong.setModel(model);
            }
            else {JOptionPane.showMessageDialog(null,"Lớp đã được phân công môn này"); }
  
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int xoa = JOptionPane.showConfirmDialog(null,"Bạn có chắc muốn xóa không?");
        if(xoa!=0)
            return;
        
        PhanCongGDBUS pcBus = new PhanCongGDBUS();
        TKBBUS tkbBus = new TKBBUS();
        NamHocBUS nhBus = new NamHocBUS();
        LopBUS lopBus = new LopBUS();
        HocKyBUS hkBus = new HocKyBUS();
        MonHocBUS mhBus = new MonHocBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
        String choose = null;
        if(radHk1.isSelected())
        choose = "1";
        if(radHk2.isSelected())
        choose = "2";
        int i = tbPhanCong.getSelectedRow();
        if (i >= 0) {
            PhanCongGDDTO pcCanXoa = new PhanCongGDDTO();
            pcCanXoa.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
            pcCanXoa.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
            pcCanXoa.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
            pcCanXoa.setHocKy(hkBus.getDshk(),choose);
            pcCanXoa.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());
            pcBus.xoa(pcCanXoa);
            for(int j=0;j<pcBus.dspc.size();++j){
                if(dspc.get(j).getLop().getMalop().equals(pcCanXoa.getLop().getMalop())
                    && dspc.get(j).getMonHoc().getMamh().equals(pcCanXoa.getMonHoc().getMamh())
                    && dspc.get(j).getHocKy().getMahk().equals(pcCanXoa.getHocKy().getMahk())
                    && dspc.get(j).getNamHoc().getManh().equals(pcCanXoa.getNamHoc().getManh()))
                    dspc.remove(j);
            }
            loadpc();
            
            TKBDTO tkb = new TKBDTO();
            tkb.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
            tkb.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
            tkb.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
            tkb.setHocKy(hkBus.getDshk(),choose);
            tkb.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());
            tkb.setThu(cbxThu.getSelectedItem().toString());
            tkb.setTietBD(Integer.parseInt(cbxTietBd.getSelectedItem().toString()));
            tkb.setTietKT(Integer.parseInt(cbxTietKt.getSelectedItem().toString()));
            
            if(pcCanXoa.getLop().getMalop().equals(tkb.getLop().getMalop())
                && pcCanXoa.getMonHoc().getMamh().equals(tkb.getMonHoc().getMamh())
                && pcCanXoa.getHocKy().getMahk().equals(tkb.getHocKy().getMahk())
                && pcCanXoa.getGiaoVien().getMagv().equals(tkb.getGiaoVien().getMagv())
                && pcCanXoa.getNamHoc().getManh().equals(tkb.getNamHoc().getManh()))
                tkbBus.xoa(tkb);
            for(int k=0;k<tkbBus.dstkb.size();++k){
                if(tkbBus.dstkb.get(k).getLop().getMalop().equals(tkb.getLop().getMalop()) 
                    && tkbBus.dstkb.get(k).getGiaoVien().getMagv().equals(tkb.getGiaoVien().getMagv())
                    && tkbBus.dstkb.get(k).getMonHoc().getMamh().equals(tkb.getMonHoc().getMamh()))
                       dstkb.remove(k);
            }
            loadtkb();
        }
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnChonMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonMonActionPerformed
        // TODO add your handling code here:
        SubFrameChonMonHoc chonMonHoc = new SubFrameChonMonHoc(cbxMon.getSelectedItem().toString(),this);
        chonMonHoc.setVisible(true);
    }//GEN-LAST:event_btnChonMonActionPerformed
    
    public void SetCbxMon(String mamh)
    {
        cbxMon.setSelectedItem(mamh);
    }
    
    private void btnChonGiaoVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonGiaoVienActionPerformed
        // TODO add your handling code here:
        SubFrameChonGiaoVien chonGiaoVien = new SubFrameChonGiaoVien(cbxGiaoVien.getSelectedItem().toString(),this);
        chonGiaoVien.setVisible(true);
    }//GEN-LAST:event_btnChonGiaoVienActionPerformed
    
    public void SetCbxGiaoVien(String magv)
    {
        cbxGiaoVien.setSelectedItem(magv);
    }
    
    private void btnChonLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonLopActionPerformed
        // TODO add your handling code here:
        SubFrameChonLop_GD chonLop = new SubFrameChonLop_GD(cbxLop.getSelectedItem().toString(),this);
        chonLop.setVisible(true);
    }//GEN-LAST:event_btnChonLopActionPerformed
    
    public void SetCbxLop(String maLop)
    {
        cbxLop.setSelectedItem(maLop);
    }
    
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        PhanCongGDBUS pcBus = new PhanCongGDBUS();
        TKBBUS tkbBus = new TKBBUS();
        MonHocBUS mhBus = new MonHocBUS();
        NamHocBUS nhBus = new NamHocBUS();
        PhongBUS phongBus = new PhongBUS();
        LopBUS lopBus = new LopBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
        HocKyBUS hkBus = new HocKyBUS();

        String choose = null;
        if(radHk1.isSelected())
        choose = "1";
        if(radHk2.isSelected())
        choose = "2";
        
        int i = tbPhanCong.getSelectedRow();
        if (i >= 0) {
            boolean kiemTra = pcBus.kiemTraTrungMa(cbxLop.getSelectedItem().toString(), cbxMon.getSelectedItem().toString(),
            cbxNamHoc.getSelectedItem().toString(), choose);
            if(!kiemTra){
                PhanCongGDDTO pcCu = new PhanCongGDDTO();
                pcCu.setLop(lopBus.getDslop(),pcBus.timLopTheoTen(tbPhanCong.getModel().getValueAt(i, 0).toString()));
                pcCu.setMonHoc(mhBus.getDsmh(),pcBus.timMonHocTheoTen(tbPhanCong.getModel().getValueAt(i, 1).toString()));
                pcCu.setGiaoVien(gvBus.getDsgv(),pcBus.timGiaoVienTheoTen(tbPhanCong.getModel().getValueAt(i, 2).toString()));
                pcCu.setHocKy(hkBus.getDshk(),pcBus.timHocKyTheoTen(tbPhanCong.getModel().getValueAt(i, 3).toString()));
                pcCu.setNamHoc(nhBus.getDsnh(),pcBus.timNamHocTheoTen(tbPhanCong.getModel().getValueAt(i, 4).toString()));

                PhanCongGDDTO pcCanSua = new PhanCongGDDTO();
                pcCanSua.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
                pcCanSua.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
                pcCanSua.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
                pcCanSua.setHocKy(hkBus.getDshk(),choose);
                pcCanSua.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());

                pcBus.sua(pcCanSua,pcCu);
                for(int j=0;j<pcBus.dspc.size();++j){
                    if(dspc.get(j).getLop().getMalop().equals(pcCanSua.getLop().getMalop())
                        && dspc.get(j).getMonHoc().getMamh().equals(pcCanSua.getMonHoc().getMamh())
                        && dspc.get(j).getHocKy().getMahk().equals(pcCanSua.getHocKy().getMahk())
                        && dspc.get(j).getNamHoc().getManh().equals(pcCanSua.getNamHoc().getManh()))
                        dspc.set(j,pcCanSua);
                }
                loadpc();

                TKBDTO tkbCu = new TKBDTO();
                tkbCu.setThu(tbTietHoc.getModel().getValueAt(i, 0).toString());
                tkbCu.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
                tkbCu.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
                tkbCu.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
                tkbCu.setTietBD(Integer.parseInt(tbTietHoc.getModel().getValueAt(i, 1).toString()));
                tkbCu.setTietKT(Integer.parseInt(tbTietHoc.getModel().getValueAt(i, 2).toString()));
                tkbCu.setHocKy(hkBus.getDshk(),choose);
                tkbCu.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());

                TKBDTO tkb = new TKBDTO();
                tkb.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
                tkb.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
                tkb.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
                tkb.setHocKy(hkBus.getDshk(),choose);
                tkb.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());
                tkb.setThu(cbxThu.getSelectedItem().toString());
                tkb.setTietBD(Integer.parseInt(cbxTietBd.getSelectedItem().toString()));
                tkb.setTietKT(Integer.parseInt(cbxTietKt.getSelectedItem().toString()));

                if(pcCanSua.getLop().getMalop().equals(tkb.getLop().getMalop())
                    && pcCanSua.getMonHoc().getMamh().equals(tkb.getMonHoc().getMamh())
                    && pcCanSua.getHocKy().getMahk().equals(tkb.getHocKy().getMahk())
                    && pcCanSua.getGiaoVien().getMagv().equals(tkb.getGiaoVien().getMagv())
                    && pcCanSua.getNamHoc().getManh().equals(tkb.getNamHoc().getManh()))
                    tkbBus.sua(tkb,tkbCu);
                for(int k=0;k<tkbBus.dstkb.size();++k){
                    if(tkbBus.dstkb.get(k).getLop().getMalop().equals(tkb.getLop().getMalop()) 
                        && tkbBus.dstkb.get(k).getGiaoVien().getMagv().equals(tkb.getGiaoVien().getMagv())
                        && tkbBus.dstkb.get(k).getMonHoc().getMamh().equals(tkb.getMonHoc().getMamh()))
                           dstkb.set(k,tkb);
                }
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemTietActionPerformed
        // TODO add your handling code here:
        TKBBUS tkbBus = new TKBBUS();
        LopBUS lopBus = new LopBUS();
        HocKyBUS hkBus = new HocKyBUS();
        NamHocBUS nhBus = new NamHocBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
        MonHocBUS mhBus = new MonHocBUS();
        
        TKBDTO tkbMoi=new TKBDTO();
        String choose = null;
        if(radHk1.isSelected())
        choose = "1";
        if(radHk2.isSelected())
        choose = "2";
        //kiểm tra điều kiện để thêm
        
        int tietBD = Integer.parseInt(cbxTietBd.getSelectedItem().toString());
        int tietKT = Integer.parseInt(cbxTietKt.getSelectedItem().toString());
        if(tietBD <= tietKT){
            
            boolean kiemTra = tkbBus.kiemTraTrungTiet(choose, cbxNamHoc.getSelectedItem().toString(), cbxLop.getSelectedItem().toString(), cbxGiaoVien.getSelectedItem().toString(), 
                    cbxThu.getSelectedItem().toString(), tietBD, tietKT);
            if(!kiemTra){

                tkbMoi.setHocKy(hkBus.getDshk(), choose);
                tkbMoi.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());
                tkbMoi.setThu(cbxThu.getSelectedItem().toString());
                tkbMoi.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
                tkbMoi.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
                tkbMoi.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
                tkbMoi.setTietBD(Integer.parseInt(cbxTietBd.getSelectedItem().toString()));
                tkbMoi.setTietKT(Integer.parseInt(cbxTietKt.getSelectedItem().toString()));
                tkbBus.them(tkbMoi);
                loadtkb();
            }
            else { JOptionPane.showMessageDialog(null, "Tiết bạn muốn thêm đã có");}
        }
        else { JOptionPane.showMessageDialog(null, "Tiết kết thúc trước khi bắt đầu");}
    }//GEN-LAST:event_btnThemTietActionPerformed

    private void btnSuaTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaTietActionPerformed
        // TODO add your handling code here: 
        TKBDTO tkbCu=new TKBDTO();
        TKBDTO tkbCanSua=new TKBDTO();
        TKBBUS tkbBus = new TKBBUS();
        LopBUS lopBus = new LopBUS();
        MonHocBUS mhBus = new MonHocBUS();
        GiaoVienBUS gvBus = new GiaoVienBUS();
        HocKyBUS hkBus =new HocKyBUS();
        NamHocBUS nhBus = new NamHocBUS();
        String choose = null;
        if(radHk1.isSelected())
        choose = "1";
        if(radHk2.isSelected())
        choose = "2";
        
        int i = tbTietHoc.getSelectedRow();
        if(i >= 0){
            int tietBD = Integer.parseInt(cbxTietBd.getSelectedItem().toString());
            int tietKT = Integer.parseInt(cbxTietKt.getSelectedItem().toString());
            if(tietBD <= tietKT){

                boolean kiemTra = tkbBus.kiemTraTrungTiet(choose, cbxNamHoc.getSelectedItem().toString(), cbxLop.getSelectedItem().toString(), 
                        cbxGiaoVien.getSelectedItem().toString(), cbxThu.getSelectedItem().toString(), tietBD, tietKT);
                if(!kiemTra){
            
                    tkbCu.setThu(tbTietHoc.getModel().getValueAt(i, 0).toString());
                    tkbCu.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
                    tkbCu.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
                    tkbCu.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
                    tkbCu.setTietBD(Integer.parseInt(tbTietHoc.getModel().getValueAt(i, 1).toString()));
                    tkbCu.setTietKT(Integer.parseInt(tbTietHoc.getModel().getValueAt(i, 2).toString()));
                    tkbCu.setHocKy(hkBus.getDshk(),choose);
                    tkbCu.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());

                    tkbCanSua.setThu(cbxThu.getSelectedItem().toString());
                    tkbCanSua.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
                    tkbCanSua.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
                    tkbCanSua.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
                    tkbCanSua.setTietBD(Integer.parseInt(cbxTietBd.getSelectedItem().toString()));
                    tkbCanSua.setTietKT(Integer.parseInt(cbxTietKt.getSelectedItem().toString()));
                    tkbCanSua.setHocKy(hkBus.getDshk(),choose);
                    tkbCanSua.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());
                    tkbBus.sua(tkbCanSua,tkbCu);
                    loadtkb();
                    loadpc();
                }
                else { JOptionPane.showMessageDialog(null, "Tiết bạn muốn thêm đã có");}
            }
            else { JOptionPane.showMessageDialog(null, "Tiết kết thúc trước khi bắt đầu");}
        }
    }//GEN-LAST:event_btnSuaTietActionPerformed

    private void btnXoaTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTietActionPerformed
        // TODO add your handling code here:
        int xoa=JOptionPane.showConfirmDialog(null,"Bạn có chắc muốn xóa ?");
        if(xoa!=0)
            return;
        TKBBUS tkbBus = new TKBBUS();
        int i = tbTietHoc.getSelectedRow();
        if(i >= 0){
            LopBUS lopBus = new LopBUS();
            MonHocBUS mhBus = new MonHocBUS();
            GiaoVienBUS gvBus = new GiaoVienBUS();
            HocKyBUS hkBus =new HocKyBUS();
            NamHocBUS nhBus = new NamHocBUS();
            String choose = null;
            if(radHk1.isSelected())
            choose = "1";
            if(radHk2.isSelected())
            choose = "2";
            TKBDTO tkb=new TKBDTO();
            tkb.setThu(cbxThu.getSelectedItem().toString());
            tkb.setLop(lopBus.getDslop(),cbxLop.getSelectedItem().toString());
            tkb.setMonHoc(mhBus.getDsmh(),cbxMon.getSelectedItem().toString());
            tkb.setGiaoVien(gvBus.getDsgv(),cbxGiaoVien.getSelectedItem().toString());
            tkb.setTietBD(Integer.parseInt(cbxTietBd.getSelectedItem().toString()));
            tkb.setTietKT(Integer.parseInt(cbxTietKt.getSelectedItem().toString()));
            tkb.setHocKy(hkBus.getDshk(),choose);
            tkb.setNamHoc(nhBus.getDsnh(),cbxNamHoc.getSelectedItem().toString());
            tkbBus.xoa(tkb);
            for(int j=0;j<tkbBus.dstkb.size();++j){
                if(tkbBus.dstkb.get(j).getLop().getMalop().equals(tkb.getLop().getMalop()) 
                    && tkbBus.dstkb.get(j).getHocKy().getMahk().equals(tkb.getHocKy().getMahk())
                    && tkbBus.dstkb.get(j).getNamHoc().getManh().equals(tkb.getNamHoc().getManh())
                    && tkbBus.dstkb.get(j).getThu()== tkb.getThu()
                    && tkbBus.dstkb.get(j).getTietBD()== tkb.getTietBD()
                    && tkbBus.dstkb.get(j).getTietBD()== tkb.getTietBD())
                       dstkb.remove(j);
            }
            loadtkb();
            }
        else{
            JOptionPane.showConfirmDialog(null,"Xóa thất bại !!");
        }
    }//GEN-LAST:event_btnXoaTietActionPerformed

    private void cbxMonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxMonMousePressed
        // TODO add your handling code here:
        GiaoVienBUS gvBus = new GiaoVienBUS();
        TienIch.duaGiaTriVaoCbx(cbxGiaoVien, gvBus.toStringList(gvBus.timKiemTheoMa(cbxMon.getSelectedItem().toString())));
    }//GEN-LAST:event_cbxMonMousePressed

    private void cbxGiaoVienMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxGiaoVienMousePressed
        // TODO add your handling code here:
        GiaoVienBUS gvBus = new GiaoVienBUS();
        TienIch.duaGiaTriVaoCbx(cbxGiaoVien, gvBus.toStringList(gvBus.timKiemTheoMon(cbxMon.getSelectedItem().toString())));
    }//GEN-LAST:event_cbxGiaoVienMousePressed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgHocKy;
    private javax.swing.JButton btnChonGiaoVien;
    private javax.swing.JButton btnChonLop;
    private javax.swing.JButton btnChonMon;
    private javax.swing.JButton btnDocDS;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaTiet;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemTiet;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTiet;
    private javax.swing.JComboBox<String> cbxGiaoVien;
    private javax.swing.JComboBox<String> cbxLop;
    private javax.swing.JComboBox<String> cbxMon;
    private javax.swing.JComboBox<String> cbxNamHoc;
    private javax.swing.JComboBox<String> cbxThu;
    private javax.swing.JComboBox<String> cbxTietBd;
    private javax.swing.JComboBox<String> cbxTietKt;
    private javax.swing.JPanel functionPanel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel lbGiaoVien;
    private javax.swing.JLabel lbHocKy;
    private javax.swing.JLabel lbLop;
    private javax.swing.JLabel lbMon;
    private javax.swing.JLabel lbNamHoc;
    private javax.swing.JLabel lbThu;
    private javax.swing.JLabel lbTietBd;
    private javax.swing.JLabel lbTietKt;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelInput;
    private javax.swing.JPanel panelInputTiet;
    private javax.swing.JRadioButton radHk1;
    private javax.swing.JRadioButton radHk2;
    private javax.swing.JScrollPane scrollPanePhanCong;
    private javax.swing.JScrollPane scrollPaneTietHoc;
    private javax.swing.JTable tbPhanCong;
    private javax.swing.JTable tbTietHoc;
    // End of variables declaration//GEN-END:variables

}
